{"version":3,"sources":["Utilities/RetrieveGames.ts","Utilities/ChessAPIFetcher.ts","Content/Pages/Chess/Support/Timer/Timer.styles.ts","Content/Pages/Chess/Support/Timer/Timer.tsx","Content/Pages/Chess/Support/UserInformation/UserInformation.styles.ts","Content/Pages/Chess/Support/UserInformation/UserInformation.tsx","Content/Pages/Chess/Support/PlayerInformation/PlayerInformation.styles.ts","Content/Pages/Chess/Support/PlayerInformation/PlayerInformation.tsx","Content/Pages/Chess/Support/ScoreCard/ChessEndScoreCard.styles.ts","Content/Pages/Chess/Support/ScoreCard/ChessEndScoreCard.tsx","Content/Pages/Chess/Support/MoveCard/MoveCard.styles.ts","Content/Pages/Chess/Support/MoveCard/MoveCard.tsx","Content/Pages/Chess/Support/ChessBoard/ChessBoard.styles.ts","Content/Pages/Chess/Support/ChessBoard/ChessBoard.tsx","Content/Pages/Chess/Support/Stats/StatsForGameMode.styles.ts","Content/Support/Graphs/DonutGraph/DonutGraphs.ts","Content/Support/Graphs/DonutGraph/DonutGraphComponent.tsx","Content/Support/Graphs/BarChart/BarChart.ts","Content/Support/Graphs/BarChart/BarChartComponent.tsx","Content/Pages/Chess/Support/Stats/StatsForGameMode.tsx","Content/Pages/Chess/Support/Profile/ChessProfiles.tsx","Content/Pages/Chess/ChessPage.tsx","Content/Pages/WorldMap/Support/Tooltip/WorldTooltip.tsx","Content/Pages/WorldMap/Support/D3World/World.ts","Content/Pages/WorldMap/WorldMap.tsx","Content/Pages/MainPage/Support/Projects/Support/Project.tsx","Content/Pages/MainPage/Support/Projects/Projects.tsx","Content/Pages/MainPage/Support/Experience/Support/Experience.tsx","Content/Pages/MainPage/Support/Experience/WorkAnimations/Plane.tsx","Content/Pages/MainPage/Support/Experience/WorkAnimations/Fan.tsx","Content/Pages/MainPage/Support/Experience/WorkAnimations/Truck.tsx","Content/Pages/MainPage/Support/Experience/WorkAnimations/FilledUpAdnArt.tsx","Content/Pages/MainPage/Support/Experience/Experiences.tsx","Content/Pages/MainPage/Support/School/Support/School.tsx","Content/Pages/MainPage/Support/School/Schools.tsx","Content/Pages/MainPage/Support/SocialMedia/SocialMedia.tsx","Content/Pages/MainPage/Support/AboutMe/AboutMe.tsx","Content/Pages/MainPage/JonathanPesce.tsx","Router/Router.tsx","App.tsx","index.tsx","Content/Pages/MainPage/Support/Experience/Assets/cloud.svg","Content/Assets/background.jpeg","Content/Pages/MainPage/Support/Assets/ChessPawn.svg","Content/Pages/MainPage/Support/Assets/WorldMap.svg","Content/Pages/MainPage/Support/Assets/Snake.svg","Content/Pages/MainPage/Support/Assets/Chart.svg","Content/Pages/MainPage/Support/Assets/Fill.svg","Content/Pages/MainPage/Support/Experience/Assets/Plane.png","Content/Pages/MainPage/Support/Experience/Assets/Truck.png","Content/Pages/MainPage/Support/Experience/Assets/waterBottle.png","Content/Pages/MainPage/Support/Assets/Concordia.svg","Content/Pages/MainPage/Support/Assets/Dawson.png","Content/Pages/MainPage/Support/Assets/IUTDeLyon.png","Content/Pages/MainPage/Support/Assets/RoyalWestAcademy.png","Content/Pages/MainPage/Support/Assets/Me.png"],"names":["RetrieveGames","archivesURL","games","archiveCounter","gameCounter","game","this","length","fetchListOfGames","backupGame","Promise","resolve","reject","fetch","then","response","json","data","retrieveNextGame","rules","white","black","getChessData","username","UserInformationPromise","res","UserStatsPromise","onlineStatusPromise","gameURLS","all","values","userInformation","online","avatar","url","name","last_online","status","followers","joined","location","profileLink","lastOnline","convertNumberToDate","word","charAt","toUpperCase","slice","getUserInformation","userStatsResponse","userStats","getGameModeStats","chess_rapid","chess_bullet","chess_blitz","usersGames","archives","userInfo","stats","title","best","last","record","rating","date","header","domain","value","getFormattedDate","color","generateDonutGraphData","loss","draw","win","result","colour","time","Date","month","months","getMonth","day","getDate","year","getFullYear","punctuation","TimerDiv","styled","div","Timer","props","Component","Wrapper","UserInformation","PlayerInformation","GameCard","Title","GameResult","GameText","ChessEndScoreCard","currentUser","determineOutcome","winner","loser","endGameResult","getEndResult","drawType","Card","mobile","MoveAndTime","Moves","Move","Times","Time","WhiteTime","BlackTime","MoveCard","moves","map","move","i","renderMove","index","constTime","timeFormat","width","style","toFixed","moveNum","times","renderTime","Chess","require","ChessBoard","chess","moveIndex","increment","startTime","parseInt","time_control","retrieveMoves","pgn","retrieveTimes","split","state","whiteTime","blackTime","fenPosition","gameEnded","movesPlayed","nextMove","bind","setState","coords","document","getElementsByTagName","remove","setInterval","className","height","coordinates","fen","viewOnly","newTime","push","calculateTimeTaken","Math","floor","window","setTimeout","resetGame","oldTime","oldTimeSec","parseTimeIntoSeconds","newTimeSec","ceil","timeValues","totalSum","numOfTimes","parseFloat","pow","load_pgn","history","reset","regex","exec","timeFormatted","hours","minutes","seconds","finalTime","StatsDiv","DonutGraph","id","svg","hoverRadius","outerRadius","innerRadius","hoverOpacity","expandedHoverArc","hiddenHoverArc","Tooltip","loadAnimation","totalGames","forEach","elem","d","percentage","d3","append","attr","drawDonutChart","drawCenterText","radius","fontSize","reduce","a","b","toString","count","offset","x","y","drawLine","drawTextForElement","element","text","stroke","opacity","hover","pie","sort","pieData","arc","arcs","selectAll","enter","on","interrupt","transition","duration","n","svgDimension","node","getBoundingClientRect","tooltipWidth","offsetWidth","tooltipHeight","offsetHeight","positionLeft","positionRight","html","generateTooltipText","addStartAnimations","arcsObject","angleInterpolation","startAngle","endAngle","outerRadiusInterpolation","innerRadiusInterpolation","attrTween","end","t","currentAngle","min","tween","capitalize","DonutGraphComponent","baseID","graphNumber","render","DonutDiv","BarChart","margins","startAnimationTime","animationDuration","top","right","bottom","left","scales","GetScales","AppendAxis","AppendHoverBars","AppendBars","AppendText","bandwidth","overlap","svgHeight","call","ticks","yScale","range","padding","BarChartComponent","number","BarChartDiv","StatsForGameMode","donutGraphData","barGraphData","ChessProfile","ProfileInformation","onClick","UserIdentifier","StyledImage","src","alt","DataContainer","Data","Header","img","ChessPage","undefined","isLoadingData","emptyGame","changeGame","getFirstGame","CenterContainer","type","Page","BackgroundImage","BoardAndProfile","Profile","Stats","stat","background","WorldTooltip","TooltipContainer","ImageContainer","Information","Name","Description","Image","World","tooltip","tooltipImage","tooltipCityName","tooltipDescription","projection","pathGenerator","circles","zoom","scaleExtent","transform","k","dim","sqrt","feature","objects","countries","places","cities","features","pin","classed","long","lat","description","clientX","clientY","WorldMap","showModal","WorldMapStyles","Modal","Project","icon","link","ProjectCard","FrontFace","Content","ProjectIcon","ProjectName","BackFace","Face","Projects","PageSize","ProjectsContainer","ChessPawn","Chart","Snake","Fill","EmptyProject","Experience","companyName","positionDate","linkTitle","animation","ExperienceContainer","CompanyInformation","CompanyName","PositionDuration","PositionInformation","PositionTitle","PositionDescription","PositionDetails","Detail","size","WorkLink","span","Plane","Container","PlaneContainer","PlaneImage","airplane","Clouds","CloudImage","cloud","Fan","FanBox","FanCircle","FanContainer","LeftFan","RightFan","TopFan","BottomFan","FanElement","HorizontalFan","VerticalFan","Truck","TruckImg","truck","Road","RoadLine1","RoadLine2","RoadLine3","RoadLine4","RoadLine5","RoadLine6","RoadLine7","RoadLine","FilledUpAdnArt","BorderBox","WaterBottle","waterBottle","Experiences","ProjectPage","ExperiencePage","School","Schools","CreateImageElement","Concordia","IUT","Dawson","RoyalWest","SchoolDisplay","SchoolImage","SocialMedia","List","SocialMediaPaltform","href","Squares","aria-hidden","ul","li","AboutMe","AboutMeSection","Introduction","ProfilePicture","Me","Welcome","Quote","AboutMeText","Hint","JonathanPesce","PersonalPage","blur","max","bgImage","bgImageAlt","strength","CoverImage","MainCoverImageInformation","NameHeader","RouterManager","exact","path","component","App","ReactDOM","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f04e8109.chunk.js","sourcesContent":["import { IGame, GamesResponse } from \"../types/chess-com\";\r\n\r\nexport class RetrieveGames {\r\n    private archivesURL: string[]; \r\n    private games: IGame[];\r\n    private archiveCounter: number;\r\n    private gameCounter: number;\r\n    private game: Promise<IGame>;\r\n\r\n    constructor(archivesURL: string[]) {\r\n        this.archivesURL = archivesURL;\r\n        this.archiveCounter = archivesURL.length - 1;\r\n        this.games = [];\r\n        this.gameCounter = -1;\r\n\r\n        this.game = this.fetchListOfGames();\r\n    }\r\n\r\n    public getFirstGame(): Promise<IGame> {\r\n        return this.game;\r\n    }\r\n\r\n    public retrieveNextGame(): IGame {\r\n        let {games, gameCounter} = this;\r\n\r\n        if (games.length === 0)\r\n            return backupGame;\r\n\r\n        let game: IGame = games[gameCounter];\r\n        this.gameCounter -= 1;\r\n        \r\n        if (gameCounter < 0)\r\n            this.fetchListOfGames();\r\n        \r\n        return game;\r\n    }\r\n\r\n    private fetchListOfGames() {\r\n        let {archiveCounter, archivesURL} = this;\r\n\r\n        if (archiveCounter < 0)\r\n            archiveCounter = archivesURL.length - 1;\r\n\r\n        return new Promise<IGame>((resolve, reject) => {\r\n            fetch(archivesURL[archiveCounter--])\r\n            .then((response: Response) => response.json())\r\n            .then((data: GamesResponse) => {\r\n                this.games = data.games;\r\n                this.gameCounter = this.games.length - 1;\r\n                resolve(this.retrieveNextGame());\r\n            })\r\n        });\r\n    }\r\n}\r\n\r\n//Temp data for now (To change to MC game or Alpha Zero)\r\nconst backupGame: IGame = {\r\n    \"url\":\"https://www.chess.com/live/game/4795799891\",\r\n    \"pgn\":\"[Event \\\"Live Chess\\\"]\\n[Site \\\"Chess.com\\\"]\\n[Date \\\"2020.05.01\\\"]\\n[Round \\\"-\\\"]\\n[White \\\"aleeminn\\\"]\\n[Black \\\"PesceTheFish\\\"]\\n[Result \\\"0-1\\\"]\\n[ECO \\\"C44\\\"]\\n[ECOUrl \\\"https://www.chess.com/openings/Kings-Pawn-Opening-Tayler-Opening\\\"]\\n[CurrentPosition \\\"2r3kr/p4p1p/1b4pB/3p4/1R6/N1P2Q2/PP3PPP/4q1K1 w - -\\\"]\\n[Timezone \\\"UTC\\\"]\\n[UTCDate \\\"2020.05.01\\\"]\\n[UTCTime \\\"10:54:30\\\"]\\n[WhiteElo \\\"1024\\\"]\\n[BlackElo \\\"1106\\\"]\\n[TimeControl \\\"180+2\\\"]\\n[Termination \\\"PesceTheFish won by checkmate\\\"]\\n[StartTime \\\"10:54:30\\\"]\\n[EndDate \\\"2020.05.01\\\"]\\n[EndTime \\\"11:02:02\\\"]\\n[Link \\\"https://www.chess.com/live/game/4795799891\\\"]\\n\\n1. e4 {[%clk 0:03:01.5]} 1... e5 {[%clk 0:03:00.7]} 2. Nf3 {[%clk 0:03:01.4]} 2... Nc6 {[%clk 0:03:00.7]} 3. Be2 {[%clk 0:03:01.6]} 3... Bb4 {[%clk 0:03:00.7]} 4. c3 {[%clk 0:02:59.4]} 4... Ba5 {[%clk 0:03:00.9]} 5. O-O {[%clk 0:03:00.7]} 5... Nf6 {[%clk 0:03:01]} 6. d3 {[%clk 0:03:00]} 6... Nh5 {[%clk 0:03:00.6]} 7. Nxe5 {[%clk 0:02:57.3]} 7... Nxe5 {[%clk 0:02:55.7]} 8. Bxh5 {[%clk 0:02:56.3]} 8... g6 {[%clk 0:02:56.6]} 9. Be2 {[%clk 0:02:54.1]} 9... d6 {[%clk 0:02:51.4]} 10. d4 {[%clk 0:02:54.5]} 10... Nd7 {[%clk 0:02:46.8]} 11. e5 {[%clk 0:02:53.4]} 11... dxe5 {[%clk 0:02:45.4]} 12. dxe5 {[%clk 0:02:54.4]} 12... Nxe5 {[%clk 0:02:41.2]} 13. Qa4+ {[%clk 0:02:50.5]} 13... Nc6 {[%clk 0:02:38.3]} 14. Bb5 {[%clk 0:02:47.7]} 14... Bb6 {[%clk 0:02:20.1]} 15. Re1+ {[%clk 0:02:45.6]} 15... Kf8 {[%clk 0:01:54.3]} 16. Bh6+ {[%clk 0:02:43.7]} 16... Kg8 {[%clk 0:01:47.7]} 17. Bxc6 {[%clk 0:02:40.7]} 17... bxc6 {[%clk 0:01:40.7]} 18. Qxc6 {[%clk 0:02:40.3]} 18... Bd7 {[%clk 0:01:39.4]} 19. Qf3 {[%clk 0:02:17.8]} 19... c6 {[%clk 0:01:03.4]} 20. Na3 {[%clk 0:02:11.5]} 20... Qh4 {[%clk 0:01:03.5]} 21. Bf4 {[%clk 0:01:43.8]} 21... Rc8 {[%clk 0:00:35.9]} 22. Rad1 {[%clk 0:01:38.4]} 22... Be6 {[%clk 0:00:34.9]} 23. Re4 {[%clk 0:01:03.2]} 23... Bd5 {[%clk 0:00:35.3]} 24. Rxd5 {[%clk 0:00:33.3]} 24... cxd5 {[%clk 0:00:33.9]} 25. Rb4 {[%clk 0:00:17.7]} 25... Qe7 {[%clk 0:00:20.4]} 26. Bh6 {[%clk 0:00:05.1]} 26... Qe1# {[%clk 0:00:20.8]} 0-1\",\r\n    \"time_control\":\"180+2\",\r\n    \"end_time\":1588330922,\r\n    \"rated\":true,\r\n    \"fen\":\"2r3kr/p4p1p/1b4pB/3p4/1R6/N1P2Q2/PP3PPP/4q1K1 w - -\",\r\n    \"time_class\":\"blitz\",\r\n    rules:\"chess\",\r\n    white:{\r\n       \"rating\":1024,\r\n       \"result\":\"checkmated\",\r\n       \"@id\":\"https://api.chess.com/pub/player/aleeminn\",\r\n       \"username\":\"aleeminn\"\r\n    },\r\n    black:{\r\n       \"rating\":1106,\r\n       \"result\":\"win\",\r\n       \"@id\":\"https://api.chess.com/pub/player/pescethefish\",\r\n       \"username\":\"PesceTheFish\"\r\n    }\r\n  }","import { UserInfoResponse, PlayerStatsResponse, ChessStats } from \"../types/chess-com\";\r\nimport { RetrieveGames } from \"./RetrieveGames\";\r\n\r\nexport const getChessData = (username: string): Promise<ChessInformation> => \r\n{\r\n    return new Promise<ChessInformation>((resolve, reject) => {\r\n        //For now we are going to do request sequentially so that there is no issue with Chess.com\r\n        //Todo If possible test working with sending parrellel request and see what you can get away with\r\n        let UserInformationPromise = fetch(`https://api.chess.com/pub/player/${username}`)\r\n                                        .then((res: Response) => res.json());\r\n\r\n        let UserStatsPromise = fetch(`https://api.chess.com/pub/player/${username}/stats`)\r\n                                    .then((res: Response) => res.json()); \r\n\r\n        let onlineStatusPromise = fetch(`https://api.chess.com/pub/player/${username}/is-online`)\r\n                                .then((res: Response) => res.json()); \r\n\r\n        let gameURLS = fetch(`https://api.chess.com/pub/player/pescethefish/games/archives`)\r\n                        .then((res: Response) => res.json());\r\n        \r\n\r\n        Promise.all([UserInformationPromise, onlineStatusPromise, UserStatsPromise, gameURLS])\r\n            .then((values: any[]) => {\r\n                //Retrieves user information \r\n                let userInfoRes: UserInfoResponse = values[0];\r\n                let online: boolean = values[1];\r\n                let userInformation: ChessUserInformation = getUserInformation(userInfoRes, online);\r\n\r\n                //Retrieves users stats\r\n                let userStatsResponse: PlayerStatsResponse = values[2];\r\n                let userStats: GameModeStats[] = getUserStats(userStatsResponse);\r\n\r\n                //Retrieve the url of the user's games\r\n                let usersGames: string[] = values[3].archives;\r\n                let games = new RetrieveGames(usersGames);\r\n\r\n                resolve({\r\n                    userInfo: userInformation,\r\n                    stats: userStats,\r\n                    games: games,\r\n                });\r\n            })\r\n    })\r\n}\r\n\r\nfunction getUserStats(res: PlayerStatsResponse): GameModeStats[] {\r\n    return [\r\n        getGameModeStats(res.chess_rapid, \"Rapid\"),\r\n        getGameModeStats(res.chess_bullet, \"Bullet\"),\r\n        getGameModeStats(res.chess_blitz, \"Blitz\"),\r\n    ]\r\n}\r\n\r\nfunction getGameModeStats(data: ChessStats, title: string): GameModeStats {\r\n    let {best, last, record} = data;\r\n    let green = \"#769656\";\r\n    let red = \"#b33430\";\r\n    let gray = \"#a7a6a2\";\r\n\r\n    if (!best)\r\n        best = {\r\n            game: \"\",\r\n            rating: 1200,\r\n            date: 0, \r\n        };\r\n    \r\n\r\n    let bestRating: BarGraphData = {\r\n        domain: \"Best\",\r\n        value: best.rating,\r\n        date: getFormattedDate(best.date ?? 0),\r\n        color: green\r\n    }\r\n\r\n    let currentRating: BarGraphData = {\r\n        domain: \"Current\",\r\n        value: last.rating,\r\n        color: (best.rating === last.rating) ? green : red  \r\n    }\r\n\r\n    let gameRecord: DonutGraphData[] = [\r\n        generateDonutGraphData(\"Loss\", record.loss, red),\r\n        generateDonutGraphData(\"Draws\", record.draw, gray),\r\n        generateDonutGraphData(\"Wins\", record.win, green)\r\n    ]\r\n\r\n    return {\r\n        header: title,\r\n        rating: [bestRating, currentRating],\r\n        record: gameRecord,\r\n    }\r\n}\r\n\r\nfunction generateDonutGraphData(title: string, result: number, colour: string): DonutGraphData {\r\n    return {\r\n        title: title,\r\n        result: result,\r\n        colour: colour,\r\n    }\r\n}\r\n\r\nfunction getUserInformation(res: UserInfoResponse, online: boolean): ChessUserInformation {\r\n    let {avatar, url, name, last_online, status, followers, joined, location, username } = res;\r\n\r\n    return {\r\n        avatar: avatar,\r\n        profileLink: url,\r\n        username: username,\r\n        lastOnline: online ? \"Currently\" : convertNumberToDate(last_online),\r\n        status: capitalizeFirstLetter(status),\r\n        followers: followers,\r\n        joined: convertNumberToDate(joined),\r\n        location: location,\r\n        name: name\r\n    }\r\n}\r\n\r\nfunction convertNumberToDate(time: number) : string{\r\n    let date: Date = new Date(time * 1000);\r\n    let month: string = months[date.getMonth()];\r\n    let day: string = getFormattedDate(date.getDate());\r\n    let year: number = date.getFullYear();\r\n\r\n    return `${month} ${day} ${year}`;\r\n}\r\n\r\nfunction getFormattedDate(day: number): string {\r\n    let punctuation: string = \"th\";\r\n    \r\n\r\n    if (day === 1) {\r\n        punctuation = \"st\";\r\n    } else if (day === 2) {\r\n        punctuation = \"nd\";\r\n    } else if (day === 3) {\r\n        punctuation = \"rd\";\r\n    } \r\n\r\n    return day + punctuation;\r\n}\r\n\r\nfunction capitalizeFirstLetter(word: string): string {\r\n    return word.charAt(0).toUpperCase() + word.slice(1);\r\n}\r\n\r\n//TODO needs to be what throws the user not found exception \r\n//TODO needs to handle different error codes i.e. res.ok()\r\n\r\n//Define the constants for Dates\r\nconst months: string[] = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n","import styled from \"styled-components\";\r\n\r\nexport const TimerDiv = styled.div`\r\n    border: 1px solid black;\r\n    display: flex;\r\n    width: fit-content;\r\n    background-color: lightgrey;\r\n    width: 70px;\r\n    height: 20px;\r\n    border-radius: 5px;\r\n\r\n    font-size: 18px;\r\n    font-weight: 500;\r\n\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 5px 0px;\r\n`","import React, { Component } from \"react\";\r\nimport { TimerDiv } from \"./Timer.styles\";\r\n\r\nexport class Timer extends Component<IProps> {\r\n    render() {\r\n        return <TimerDiv><div>{this.props.time}</div></TimerDiv>  \r\n    }\r\n}\r\n\r\n//Defining Types\r\ninterface IProps {\r\n    time: string\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    color: lightgrey;\r\n`","import React, { Component } from \"react\";\r\nimport { Wrapper } from \"./UserInformation.styles\";\r\n\r\nexport class UserInformation extends Component<IProps> {\r\n    render() {\r\n        let {username, rating} = this.props;\r\n        return (\r\n            <Wrapper>\r\n                {username + \" (\" + rating + \")\"}\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\n//Define styles\r\ninterface IProps {\r\n    username: string,\r\n    rating: number|string\r\n}","import styled from \"styled-components\";\r\n\r\n//Defining Styled-Components\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n`","import React, { Component } from \"react\";\r\nimport { Timer } from \"../Timer/Timer\";\r\nimport { UserInformation } from \"../UserInformation/UserInformation\";\r\nimport { Wrapper } from \"./PlayerInformation.styles\";\r\n\r\nexport class PlayerInformation extends Component<IProps> {\r\n    render() {\r\n        let {username, rating, time} = this.props;\r\n\r\n        return (\r\n            <Wrapper>\r\n                <UserInformation username={username} rating={rating}/>\r\n                <Timer time={time}/>\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\n\r\n//Define styles\r\ninterface IProps {\r\n    username: string,\r\n    rating: number|string,\r\n    time: string\r\n}","import styled from \"styled-components\";\r\n\r\n//Styled components\r\nexport const GameCard = styled.div`\r\n    position: absolute;\r\n    left: 15%;\r\n    top: 35%;\r\n    height: 30%;\r\n    width: 70%;\r\n    box-shadow: 2px;\r\n    border-radius: 15px;\r\n    z-index: 10;\r\n    background-color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const Title = styled.div`\r\n    text-align: center;\r\n    width: 100%;\r\n    padding: 4px 0px;\r\n    background-color: ${props => props.color};\r\n    border-top-left-radius: 15px;\r\n    border-top-right-radius: 15px;\r\n    font-size: 20px;\r\n`\r\nexport const GameResult = styled.div`\r\n    display: flex;\r\n    height: 77px;\r\n`\r\n\r\nexport const GameText = styled.div`\r\n    justify-self: center;\r\n    align-self: center;\r\n    padding: 0px 10px;\r\n`\r\n\r\nexport const green = \"#769656\";\r\nexport const red = \"#b33430\";\r\nexport const gray = \"#a7a6a2\";","import React, { Component } from \"react\";\r\nimport { IPlayerInformation } from \"../../../../../types/chess-com\";\r\nimport { GameCard, red, gray, green, Title, GameResult, GameText } from \"./ChessEndScoreCard.styles\";\r\n\r\nexport class ChessEndScoreCard extends Component<IProps> {\r\n    render() {\r\n        let {white, black, currentUser} = this.props;\r\n\r\n        return (\r\n            <GameCard>   \r\n                {this.determineOutcome(white, black, currentUser)}\r\n            </GameCard>\r\n        );\r\n    }\r\n\r\n    private determineOutcome(white: IPlayerInformation, black: IPlayerInformation, currentUser: string): JSX.Element {\r\n        let winner: string;\r\n        let loser: string;\r\n        let result: string;\r\n        let colour: string = red; \r\n        let endGameResult: string;\r\n\r\n        if (white.result === \"win\") {\r\n            winner = white.username;\r\n            loser = black.username;\r\n            result = black.result;\r\n\r\n            endGameResult = this.getEndResult(winner, loser, result);\r\n\r\n            if (white.username === currentUser)\r\n                colour = green;\r\n        } else if (black.result === \"win\") {\r\n            winner = black.username;\r\n            loser = white.username;\r\n            result = white.result;\r\n\r\n            endGameResult = this.getEndResult(winner, loser, result);\r\n\r\n            if (black.username === currentUser)\r\n                colour = green;\r\n        } else {\r\n            colour = gray;\r\n            endGameResult = this.drawType(white.result);\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Title color={colour}>Game Over</Title>\r\n                <GameResult><GameText>{endGameResult}</GameText></GameResult>\r\n            </>\r\n        )\r\n    }\r\n\r\n    private drawType(result: string) {\r\n        if (result === \"agreed\")\r\n            return \"Players agreed to a draw\";\r\n\r\n        if (result === \"repetition\")\r\n            return \"Draw by repetition\";\r\n\r\n        if (result === \"stalemate\")\r\n            return \"Draw due to stalemate\";\r\n\r\n        return \"Draw due to insufficient material\"\r\n    }\r\n\r\n    private getEndResult(winner: string, loser: string, result: string): string {\r\n        if (result === \"checkmated\")\r\n            return winner + \" checkmated \" + loser + \" to win the game\";\r\n        \r\n        if (result === \"timeout\")\r\n            return winner + \" won the game as \" + loser + \" timedout\";\r\n\r\n        //if (result === \"resigned\")\r\n        return winner + \" won the game as \" + loser + \" resigned\";\r\n    }\r\n}\r\n\r\n//Define the props\r\ninterface IProps {\r\n    white: IPlayerInformation,\r\n    black: IPlayerInformation,\r\n    currentUser: string\r\n}","import styled from \"styled-components\"\r\n\r\nexport const Card = styled.div<ICard>`\r\n    height: 345px;\r\n    width: 200px;\r\n    background-color: #f1f1f1;\r\n    border: 1px gray solid;\r\n    border-radius: 10px;\r\n    display: ${props => props.mobile ? \"none\" : \"block\"};\r\n    margin-left: ${props => props.mobile ? \"30px\" : \"0px\"};\r\n\r\n    @media (max-width: 768px) {\r\n        display: ${props => props.mobile ? \"block\" : \"none\"};\r\n    }\r\n\r\n    @media (max-width: 480px) {\r\n        margin-left: ${props => props.mobile ? \"10px\" : \"0px\"};\r\n    }\r\n\r\n    @media (max-width: 373px) {\r\n        margin-left: 0px;\r\n    }\r\n`\r\n\r\ninterface ICard {\r\n    mobile: boolean\r\n}\r\n\r\nexport const MoveAndTime = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    height: 21px;\r\n    padding: 5px 0px;\r\n    margin: 0px 4px;\r\n    width: calc(100% - 8px);\r\n`\r\n\r\nexport const Moves = styled.div`\r\n    overflow: auto;\r\n    height: calc(100% - 24px);\r\n\r\n    &::-webkit-scrollbar {\r\n        width: 5px;\r\n    }\r\n\r\n    &::-webkit-scrollbar-thumb {\r\n        background: #666;\r\n        border-radius: 20px;\r\n    }\r\n\r\n    &::-webkit-scrollbar-track {\r\n        background: #ddd;\r\n        border-radius: 20px;\r\n    }\r\n`\r\n\r\nexport const Move = styled.div`\r\n    font-weight: 450;\r\n    font-size: 16px;\r\n\r\n`\r\nexport const Title = styled.div`\r\n    height: fit-content;\r\n    width: 100%;\r\n    border-bottom: 1px black solid;\r\n    font-size: 20px;\r\n    padding-left: 10px;\r\n    font-weight: bold;\r\n    box-sizing: border-box;\r\n`\r\n\r\nexport const Times = styled.div`\r\n    height: 100%;\r\n    width: 40%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n`\r\n\r\nexport const Time = styled.div`\r\n    width: 100%;\r\n    height: 40%;\r\n\r\n    display: flex;\r\n    align-content: center;\r\n    justify-content: flex-end;\r\n    font-size: 9px;\r\n`\r\n\r\nexport const WhiteTime = styled.div`\r\n    height: 100%;\r\n    width: 50%;\r\n    margin-right: 3px;\r\n    background-color: lightgray;\r\n`\r\n\r\nexport const BlackTime = styled.div`\r\n    height: 100%;\r\n    width: 50%;\r\n    margin-right: 3px;\r\n    background-color: black;\r\n`","import React, { Component } from \"react\";\r\nimport { IMove } from \"../../../../../types/ChessPage\";\r\nimport { Card, Moves, Time, WhiteTime, BlackTime, MoveAndTime, Move, Times, Title } from \"./MoveCard.styles\";\r\n\r\nexport class MoveCard extends Component<IProps> {\r\n    render() {\r\n        return (\r\n            <Card mobile={this.props.mobile ? true : false}>\r\n                <Title>Moves</Title>\r\n                <Moves>\r\n                    {this.props.moves.map((move: IMove, i: number) => this.renderMove(move, i + 1))}\r\n                </Moves>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    private renderTime(time: number, index: number) {\r\n        let constTime = this.props.timeFormat / 8;\r\n        let width: number =  (constTime - time) / constTime;\r\n        \r\n        if (width < 0) \r\n            width = 0;\r\n\r\n        width = (1 - width) * 100;\r\n\r\n        if (width > 100)\r\n            width = 100;\r\n\r\n        return (\r\n            <Time>{index % 2 === 0 ? <WhiteTime style={{width: width + \"%\"}}/> : <BlackTime style={{width: width + \"%\"}}/>} {time.toFixed(1)}</Time>\r\n        );\r\n    }\r\n\r\n    private renderMove(move: IMove, moveNum: number) {\r\n        let { moves, times } = move;\r\n\r\n        return (\r\n            <MoveAndTime>\r\n                <Move>{moveNum} {moves.map((move: string) => move + \" \")}</Move>\r\n                <Times>\r\n                    {times.map((time: number, index: number) => this.renderTime(time, index))}\r\n                </Times>\r\n            </MoveAndTime>\r\n        );\r\n    }\r\n}\r\n\r\n//Define props\r\ninterface IProps {\r\n    timeFormat: number,\r\n    moves: IMove[],\r\n    mobile?: boolean\r\n}\r\n\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    position: relative;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: fit-content;\r\n    margin: 0px 30px;\r\n`","import React, { Component } from \"react\";\r\nimport Chessground from 'react-chessground';\r\n// import 'react-chessground/dist/assets/theme.css'; // Or your own chess theme\r\nimport 'react-chessground/dist/styles/chessground.css';\r\nimport { ChessInstance } from \"chess.js\";\r\nimport { PlayerInformation } from \"../PlayerInformation/PlayerInformation\";\r\nimport { ChessEndScoreCard } from \"../ScoreCard/ChessEndScoreCard\";\r\nimport { MoveCard } from \"../MoveCard/MoveCard\";\r\nimport { IGame } from \"../../../../../types/chess-com\";\r\nimport { IMove } from \"../../../../../types/ChessPage\";\r\nimport { Wrapper } from \"./ChessBoard.styles\";\r\n\r\n\r\n\r\n//Issue with typescript for now: https://github.com/jhlywa/chess.js/issues/208\r\n//May be able to fix in the future\r\nconst Chess = require('chess.js');\r\n\r\n/**\r\n * TODO for the component\r\n * \r\n * 1. Style the component, ideally with wooden 3D pieces\r\n * 2. Fix time format\r\n * 3. Fix timer location\r\n * 4. Handle end of game\r\n */\r\n\r\n/**\r\n * React component that is used to display a chessboard at a starting position, then\r\n * to show a move a second for a given game. The component takes in simply a game object\r\n * which is just the game description returned by the Chess.com API. \r\n * \r\n * @author Jonathan Pesce\r\n */\r\nexport class ChessBoard extends Component<IProps, IState> {\r\n    private moves: string[];\r\n    private times: string[];\r\n    private chess: ChessInstance;\r\n    private moveIndex: number;\r\n    private timeFormat: number;\r\n    private increment: number;\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        let {game} = this.props;\r\n        let startTime = (parseInt(game.time_control) / 60) + \":00\";\r\n\r\n        this.chess = new Chess();\r\n        this.moveIndex = 0;\r\n\r\n        this.moves = this.retrieveMoves(game.pgn);\r\n        this.times = this.retrieveTimes(game.pgn);\r\n        this.timeFormat = parseInt(game.time_control);\r\n        this.increment = parseInt(game.time_control.split(\"+\")[1] ?? \"0\")\r\n\r\n        this.state = {\r\n            whiteTime: startTime,\r\n            blackTime: startTime,\r\n            fenPosition: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\", //Starting position for FEN\r\n            gameEnded: false,\r\n            movesPlayed: []\r\n        }\r\n\r\n        this.nextMove = this.nextMove.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(props: IProps) {\r\n        let {game} = props;\r\n        let startTime = parseInt(game.time_control) / 60 + \":00\";\r\n\r\n        this.chess = new Chess();\r\n        this.moveIndex = 0;\r\n\r\n        this.moves = this.retrieveMoves(game.pgn);\r\n        this.times = this.retrieveTimes(game.pgn);\r\n\r\n        this.setState({\r\n            whiteTime: startTime,\r\n            blackTime: startTime,\r\n            fenPosition: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\", //Starting position for FEN\r\n            gameEnded: false,\r\n            movesPlayed: []\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Everytime the component is redrawn, wait a second to play the next move\r\n     */\r\n    componentDidMount() {\r\n        let { gameEnded } = this.state;\r\n\r\n        //Remove the coordinates since the react-chess is broken\r\n        let coords = document.getElementsByTagName(\"coords\");\r\n        while (coords.length !== 0) \r\n            coords[0].remove();\r\n        \r\n\r\n        if (!gameEnded)\r\n            setInterval(this.nextMove, 1000); \r\n    }\r\n\r\n    render() {\r\n        let {game, currentUser} = this.props;\r\n        let {gameEnded, movesPlayed, fenPosition, blackTime, whiteTime} = this.state;            \r\n\r\n        return (\r\n            <>\r\n            <MoveCard mobile={true} moves={movesPlayed} timeFormat={this.timeFormat}/>\r\n            <Wrapper>\r\n                <PlayerInformation username={game.black.username} rating={game.black.rating} time={blackTime}/>\r\n                <div className=\"merida\"><Chessground style={{height: \"320px\", width: \"320px\"}} coordinates={false} fen={fenPosition} viewOnly={true} /></div>\r\n                <PlayerInformation username={game.white.username} rating={game.white.rating} time={whiteTime}/>\r\n                {gameEnded ? <ChessEndScoreCard white={game.white} black={game.black} currentUser={currentUser}/> : \"\"}\r\n            </Wrapper>\r\n            <MoveCard moves={movesPlayed} timeFormat={this.timeFormat}/>\r\n            </>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Helper function that is used to update the board for the next move as well\r\n     * as the timers for the player who played.\r\n     */\r\n    private nextMove() {\r\n        //If no more moves then set game to ended\r\n        if (this.moves.length === this.moveIndex) {\r\n            if (!this.state.gameEnded) {\r\n                this.setState({gameEnded: true});\r\n                window.setTimeout(this.props.resetGame, 5000);\r\n            }\r\n            return;\r\n        }\r\n\r\n        let {whiteTime, blackTime, movesPlayed} = this.state;\r\n\r\n        if (this.moveIndex % 2 === 0) {\r\n            let newTime = this.times[this.moveIndex];\r\n            movesPlayed.push({moves: [this.moves[this.moveIndex]], times: [this.calculateTimeTaken(whiteTime, newTime, this.increment)]})\r\n            whiteTime = newTime;\r\n        } else {\r\n            let newTime = this.times[this.moveIndex];\r\n            let index = Math.floor(this.moveIndex / 2);\r\n            movesPlayed[index].moves.push(this.moves[this.moveIndex]);\r\n            movesPlayed[index].times.push(this.calculateTimeTaken(blackTime, newTime, this.increment))\r\n            blackTime = this.times[this.moveIndex];\r\n        }\r\n\r\n        this.chess.move(this.moves[this.moveIndex++]);\r\n        this.setState({whiteTime: whiteTime, blackTime: blackTime, fenPosition: this.chess.fen(), movesPlayed: movesPlayed});\r\n    }\r\n\r\n    private calculateTimeTaken(oldTime: string, newTime: string, increment: number) {\r\n        let oldTimeSec: number = this.parseTimeIntoSeconds(oldTime);\r\n        let newTimeSec: number = this.parseTimeIntoSeconds(newTime);\r\n\r\n        return Math.ceil((oldTimeSec - (newTimeSec - increment)) * 10) / 10;\r\n    }\r\n\r\n    private parseTimeIntoSeconds(time: string) {\r\n        let timeValues: string[] = time.split(':');\r\n        let totalSum: number = 0;\r\n        let numOfTimes: number = timeValues.length - 1;\r\n\r\n        for (let i = numOfTimes; i >= 0; i--) {\r\n            totalSum += parseFloat(timeValues[i]) * Math.pow(60,  numOfTimes - i);\r\n        }\r\n\r\n        return totalSum;\r\n    }\r\n    \r\n    /**\r\n     * Using chess API retrieve all the different moves played in the game and \r\n     * return it as an array.\r\n     * \r\n     * @param pgn PGN describing the game\r\n     */\r\n    private retrieveMoves(pgn: string): string[] {\r\n        this.chess.load_pgn(pgn);\r\n        let moves: string[] = this.chess.history();\r\n        this.chess.reset();\r\n        return moves;\r\n    }\r\n\r\n    /**\r\n     * Using regex, grab all of the different clock times for each move\r\n     * and return it as an array.\r\n     * \r\n     * @param pgn PGN describing the game\r\n     */\r\n    private retrieveTimes(pgn: string): string[] {\r\n        let regex: RegExp = /{\\[%clk [0-9]:[0-5][0-9]:[0-5][0-9]\\.?[0-9]?]}/g;\r\n        let times: string[] = [];\r\n        let time: RegExpExecArray|null; \r\n\r\n        do {\r\n            time = regex.exec(pgn);\r\n            if (time) {\r\n                let timeFormatted: string[] = time[0].split(\"{[%clk \")[1].slice(0, -2).split(':');\r\n                let hours = parseInt(timeFormatted[0]);\r\n                let minutes = parseInt(timeFormatted[1]);\r\n                let seconds = parseFloat(timeFormatted[2]);\r\n                let finalTime = \"\";\r\n\r\n                if (!hours && hours !== 0) {\r\n                    finalTime += hours + \":\";\r\n                    if (minutes < 10)\r\n                        finalTime += \"0\" + minutes;\r\n                    else \r\n                        finalTime += minutes + \":\";\r\n                } else {\r\n                    finalTime += minutes + \":\";\r\n                }\r\n\r\n                if (minutes > 0) {\r\n                    if (seconds < 10) {\r\n                        finalTime += \"0\" + Math.floor(seconds);\r\n                    } else {\r\n                        finalTime += Math.floor(seconds);\r\n                    }\r\n                } else {\r\n                    if (seconds < 10) {\r\n                        finalTime += \"0\" + seconds;\r\n                    } else {\r\n                        finalTime += seconds;\r\n                    }\r\n                }\r\n                \r\n                times.push(finalTime);\r\n            }\r\n        } while (time);\r\n\r\n        return times;\r\n    }\r\n}\r\n\r\n//Define props and state\r\ninterface IProps {\r\n    game: IGame,\r\n    currentUser: string,\r\n    resetGame: VoidFunction\r\n}\r\n\r\ninterface IState {\r\n    whiteTime: string,\r\n    blackTime: string, \r\n    fenPosition: string,\r\n    gameEnded: boolean,\r\n    movesPlayed: IMove[]\r\n}","import styled from \"styled-components\";\r\n\r\nexport const StatsDiv = styled.div`\r\n    max-width: 250px;\r\n    width: 33%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-items: center;\r\n`","import * as d3 from 'd3';\r\nimport { PieArcDatum } from 'd3';\r\n\r\nexport class DonutGraph {\r\n    private data: DataWithPercentage[];\r\n    private id: string;\r\n    private svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\r\n    private hoverRadius: number;\r\n    private outerRadius: number;\r\n    private innerRadius: number;\r\n    private hoverOpacity: number;\r\n    private expandedHoverArc: any;\r\n    private hiddenHoverArc: any;\r\n    private Tooltip: d3.Selection<HTMLDivElement, unknown, HTMLElement, any>;\r\n    private width: number;\r\n    private height: number;\r\n    private loadAnimation: number;\r\n\r\n    public constructor(data: DonutGraphData[], id: string) {\r\n        //Set the constants\r\n        this.id = id;\r\n        this.hoverRadius = 0.95;\r\n        this.outerRadius = 0.85;\r\n        this.innerRadius = 0.55;\r\n        this.hoverOpacity = 0.25;\r\n        this.width = 250;\r\n        this.height = 250;\r\n        this.loadAnimation = 1000;\r\n\r\n        //Calculate the percentage for each element of data\r\n        let totalGames = 0;\r\n        data.forEach((elem: DonutGraphData) => totalGames += elem.result);\r\n\r\n        this.data = [];\r\n        data.forEach((d: DonutGraphData) => this.data.push({...d, percentage: ((d.result / totalGames) * 100).toFixed(1)}))\r\n\r\n        this.Tooltip = d3.select(\"#\" + this.id)\r\n                         .append(\"div\")\r\n                         .style(\"display\", \"none\")\r\n                         .style(\"background-color\", \"rgba(247,247,247,0.85)\")\r\n                         .style(\"border\", \"solid\")\r\n                         .style(\"border-color\", \"blue\")\r\n                         .style(\"border-width\", \"1px\")\r\n                         .style(\"border-radius\", \"3px\")\r\n                         .style(\"font-family\", \"Lucida Grande\")\r\n                         .style(\"padding\", \"5px\")\r\n                         .style(\"position\", \"absolute\");\r\n            \r\n\r\n        //Append an svg to the div that will be used to draw our graph on\r\n        this.svg = d3.select(\"#\" + this.id)\r\n                    .append(\"svg\")\r\n                    .attr(\"viewBox\", \"0 0 250 250\");\r\n    }\r\n\r\n    public render() {\r\n        let radius: number = 125;\r\n        let stroke: string = \"white\";\r\n\r\n        //Set once the expanded and hidden hover arc\r\n        this.expandedHoverArc = d3.arc().innerRadius(radius * this.outerRadius - 0.1).outerRadius(radius * this.hoverRadius) as any;\r\n        this.hiddenHoverArc = d3.arc().innerRadius(radius * this.outerRadius - 0.1).outerRadius(radius * this.outerRadius) as any;\r\n\r\n        //Set the height and width of the svg and then append a g container to draw the graph\r\n        let svg: d3.Selection<SVGGElement, unknown, HTMLElement, any>;\r\n        svg = this.svg.append(\"g\")\r\n                    .attr(\"transform\", \"translate(\" + this.width / 2 + \",\" + this.height / 2 + \")\");\r\n\r\n        //Draw the graph and the text with the calculated values\r\n        this.drawDonutChart(svg, radius, stroke, this.innerRadius, this.outerRadius, 1, false);\r\n        this.drawDonutChart(svg, radius, stroke, this.outerRadius, this.outerRadius, this.hoverOpacity, true);\r\n        this.drawCenterText(svg, radius);\r\n    }\r\n\r\n    /**\r\n     * Draws the three different values (wins, draws and lost) in the center of the circle\r\n     * seperated by small gray lines\r\n     * \r\n     * @param svg SVG to append the text in\r\n     * @param radius Radius of the main large circle\r\n     */\r\n    private drawCenterText(svg: d3.Selection<SVGGElement, unknown, HTMLElement, any>, radius: number) { \r\n        let length: number = this.data.reduce((a: DataWithPercentage, b: DataWithPercentage) => a.result > b.result ? a : b).result.toString().length;\r\n        let fontSize: number = radius / 6 - (1 * (length - 3));\r\n        let count: number = -1;\r\n        let offset: number = radius / 50;\r\n\r\n        //Draw the lines seperating the text elements\r\n        let x = radius * this.innerRadius * 0.85;\r\n        let y = fontSize / 2 + offset;\r\n        this.drawLine(svg, x, y);\r\n        this.drawLine(svg, x, -y);\r\n\r\n        this.Tooltip.style(\"font-size\", fontSize / 1.5 + \"px\");\r\n\r\n        //Increase the offset to add space between the lines and text (done in specific order to replicate chess.com)\r\n        offset *= 1.9;\r\n        this.drawTextForElement(svg, this.data[2], fontSize, offset, count++);\r\n        this.drawTextForElement(svg, this.data[0], fontSize, offset, count++);\r\n        this.drawTextForElement(svg, this.data[1], fontSize, offset, count++);\r\n    }\r\n\r\n    /**\r\n     * Draws a straight horizontal line on the given coordinates\r\n     * \r\n     * @param svg SVG to append the line onto\r\n     * @param x 1/2 the width of the line \r\n     * @param y Height position of the line\r\n     */\r\n    private drawLine(svg: d3.Selection<SVGGElement, unknown, HTMLElement, any>, x: number, y: number) {\r\n        svg.append(\"line\")\r\n            .attr(\"x1\", -x)\r\n            .attr(\"y1\", y)\r\n            .attr(\"x2\", x)\r\n            .attr(\"y2\", y)\r\n            .attr(\"stroke-width\", 0.5)\r\n            .attr(\"stroke\", \"#a7a6a2\");\r\n    }\r\n\r\n    /**\r\n     * Draws a single text element in the center of the circle\r\n     * \r\n     * @param svg SVG element to append the text onto\r\n     * @param element The data to be displayed\r\n     * @param fontSize font size of the text\r\n     * @param offset offset to be added to the position of the text\r\n     * @param count the count of the element being displayed\r\n     */\r\n    private drawTextForElement(svg: d3.Selection<SVGGElement, unknown, HTMLElement, any>, element: DataWithPercentage, fontSize: number, offset: number, count: number) {\r\n        let percentage = element.percentage + \"%\";\r\n\r\n        let text = svg.append(\"text\")\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", (offset + fontSize) * count + (fontSize * 0.33333) + \"px\") //Honestly, it works it works, TODO is fix to be better\r\n            .attr(\"fill\", element.colour);\r\n        \r\n        //Add the total count\r\n        text.append(\"tspan\")\r\n            .attr(\"font-size\", fontSize + \"px\")\r\n            .attr(\"font-weight\", \"700\")\r\n            .attr(\"font-family\", \"Segoe UI\")\r\n            .text(element.result + \" \");\r\n\r\n        //Add the count as a percentage smaller than the total count\r\n        text.append(\"tspan\")\r\n            .attr(\"font-size\", fontSize * 0.65 + \"px\")\r\n            .attr(\"font-family\", \"Segoe UI\")\r\n            .text(percentage);\r\n    }\r\n\r\n    /**\r\n     * Draws a donut graph based on the given data and adds the drawing animations\r\n     * \r\n     * @param svg SVG to append the graph too\r\n     * @param radius Radius of the graph\r\n     * @param stroke Stroke size of the divsors of sections\r\n     */\r\n    private drawDonutChart(svg: d3.Selection<SVGGElement, unknown, HTMLElement, any>, radius: number, stroke: string, innerRadius:number, outerRadius: number, opacity: number, hover: boolean) {\r\n        let pie: d3.Pie<any, DataWithPercentage> = d3.pie<DataWithPercentage>()\r\n                                                    .sort(null)\r\n                                                    .value((d: DataWithPercentage) => d.result);\r\n\r\n        //Format the data properly for the pie chart                                              \r\n        let pieData: d3.PieArcDatum<DataWithPercentage>[] = pie(this.data);\r\n\r\n        //Arc generator\r\n        let arc = d3.arc<PieArcDatum<DataWithPercentage>>().innerRadius(radius * innerRadius).outerRadius(radius * outerRadius);\r\n\r\n        //Using the data build the chart\r\n        let arcs = svg.selectAll(\"slices\")\r\n            .data(pieData)\r\n            .enter()\r\n            .append(\"path\")\r\n            .attr(\"id\", (d: PieArcDatum<DataWithPercentage>) => hover ? this.id + d.data.title + \"hover\" : this.id + d.data.title)\r\n            .attr(\"fill\", (d: PieArcDatum<DataWithPercentage>) => d.data.colour)\r\n            .attr(\"stroke\", stroke)\r\n            .style(\"stroke-width\", \"1px\")\r\n            .style(\"opacity\", opacity)\r\n            //Add events for dealing with the different hover events\r\n            .on(\"mouseenter\", hover ? () => {} : (d: PieArcDatum<DataWithPercentage>) => d3.select(\"#\" + this.id + d.data.title + \"hover\").interrupt().attr(\"d\", this.expandedHoverArc))\r\n            .on(\"mouseout\", hover ? () => {} : (d: PieArcDatum<DataWithPercentage>) => d3.select(\"#\" + this.id + d.data.title + \"hover\").transition().duration(500).attr(\"d\", this.hiddenHoverArc))\r\n            .on(\"mouseover\", hover ? () => {} : (d: PieArcDatum<DataWithPercentage>) => this.Tooltip.style(\"display\", \"block\"))\r\n            .on(\"mousemove\", hover ? () => {} : (d: PieArcDatum<DataWithPercentage>, i, n) => {\r\n\r\n                let svgDimension = this.svg.node()?.getBoundingClientRect().width ?? 0;\r\n\r\n                let tooltipWidth: number = this.Tooltip.node()?.offsetWidth ?? 0;\r\n                let tooltipHeight: number = this.Tooltip.node()?.offsetHeight ?? 0;\r\n\r\n                let positionLeft: number = (((d3.mouse(n[i])[0]) + 125) / 250) * svgDimension - tooltipWidth / 2;\r\n                let positionRight: number = (((d3.mouse(n[i])[1]) + 125) / 250) * svgDimension - tooltipHeight - 5;\r\n\r\n                this.Tooltip.html(this.generateTooltipText(d))\r\n                            .style(\"border-color\", d.data.colour)\r\n                            .style(\"left\", positionLeft + \"px\")\r\n                            .style(\"top\", positionRight + \"px\");\r\n            })\r\n            .on(\"mouseleave\", hover ? () => {} : (d: PieArcDatum<DataWithPercentage>) => this.Tooltip.style(\"display\", \"none\"));\r\n\r\n        //Add the animations to the pie chart\r\n        if (!hover)\r\n            this.addStartAnimations(pie, arc, arcs);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param pie \r\n     * @param arc \r\n     * @param arcsObject \r\n     */\r\n    private addStartAnimations(pie: d3.Pie<any, DataWithPercentage>, arc: d3.Arc<any, d3.PieArcDatum<DataWithPercentage>>, arcsObject:  d3.Selection<SVGPathElement, d3.PieArcDatum<DataWithPercentage>, SVGGElement, unknown>) {\r\n        //Adding the load animations\r\n        let angleInterpolation = d3.interpolate(pie.startAngle()(this.data), pie.endAngle()(this.data));\r\n        let outerRadiusInterpolation = d3.interpolate(0, this.outerRadius);\r\n        let innerRadiusInterpolation = d3.interpolate(0, this.innerRadius);\r\n\r\n        arcsObject.transition()\r\n            .duration(this.loadAnimation)\r\n            //@ts-ignore Type issue not sure how to resolve but works\r\n            .attrTween(\"d\", (d: d3.PieArcDatum<DataWithPercentage>) => {\r\n                let end = d.endAngle;\r\n                return (t: number) => {\r\n                    let currentAngle: number = angleInterpolation(t);\r\n                    if (currentAngle < d.startAngle)\r\n                        return \"\";\r\n\r\n                    d.endAngle = Math.min(currentAngle, end);\r\n                    return arc(d);\r\n                }\r\n            });\r\n\r\n        d3.selectAll(\"slices\")\r\n            .transition()\r\n            .duration(this.loadAnimation)\r\n            .tween(\"arcRadii\", () => {\r\n                return (t: number) => \r\n                    arc.innerRadius(innerRadiusInterpolation(t))\r\n                    .outerRadius(outerRadiusInterpolation(t));\r\n            });\r\n    }\r\n\r\n    private generateTooltipText(d: PieArcDatum<DataWithPercentage>) {\r\n        return \"<b>\" + this.capitalize(d.data.title) + \":</b> \" + d.data.result + \" (\" + d.data.percentage + \"%)\";\r\n    }\r\n\r\n    private capitalize(word: string): string {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n    }\r\n}\r\n\r\ninterface DataWithPercentage {\r\n    title: string,\r\n    result: number,\r\n    colour: string,\r\n    percentage: string\r\n}","import React from 'react';\r\nimport { Component } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { DonutGraph } from './DonutGraphs';\r\n\r\nexport class DonutGraphComponent extends Component<IProps> {\r\n    private static graphNumber: number = 0;\r\n    private static baseID: string = \"donutGraph\";\r\n    private id: string;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.id = DonutGraphComponent.baseID + DonutGraphComponent.graphNumber++;\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {data} = this.props;\r\n        let graph: DonutGraph = new DonutGraph(data, this.id);\r\n        graph.render();\r\n    }\r\n\r\n    render() {\r\n        return <DonutDiv id={this.id}></DonutDiv>\r\n    }\r\n}\r\n\r\n\r\n\r\n//Define props\r\ninterface IProps {\r\n    data: DonutGraphData[]\r\n}\r\n\r\n//Styled Components\r\nlet DonutDiv = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 50%;\r\n`","import * as d3 from 'd3';\r\n\r\nexport class BarChart {\r\n    private margins: IMargin;\r\n    private height: number;\r\n    private width: number;\r\n    private id: string;\r\n    private data: BarGraphData[];\r\n    private startAnimationTime: number;\r\n    private animationDuration: number;\r\n    private Tooltip: d3.Selection<HTMLDivElement, unknown, HTMLElement, any>;\r\n\r\n    constructor(data: BarGraphData[], id: string) {\r\n        this.margins = {top: 10, right: 30, bottom: 30, left: 40};\r\n        this.height = 250;\r\n        this.width = 250;\r\n    \r\n        this.startAnimationTime = 1000;\r\n        this.animationDuration = 700;\r\n        this.id = id;\r\n        this.data = data;\r\n\r\n    this.Tooltip = d3.select(\"#\" + this.id)\r\n        .append(\"div\")\r\n        .style(\"display\", \"none\")\r\n        .style(\"background-color\", \"rgba(247,247,247,0.85)\")\r\n        .style(\"border\", \"solid\")\r\n        .style(\"border-color\", \"blue\")\r\n        .style(\"border-width\", \"1px\")\r\n        .style(\"border-radius\", \"3px\")\r\n        .style(\"font-family\", \"Lucida Grande\")\r\n        .style(\"padding\", \"5px\")\r\n        .style(\"position\", \"absolute\");\r\n    }\r\n\r\n    render() {\r\n        let svg: d3.Selection<SVGGElement, unknown, HTMLElement, any> = d3.select(\"#\" + this.id)\r\n                                                                            .append(\"svg\")\r\n                                                                            .attr(\"viewBox\", \"0 0 250 250\")\r\n                                                                            .append(\"g\")\r\n                                                                            .attr(\"transform\", \"translate(\" + this.margins.left + \",\" + this.margins.top + \")\");\r\n\r\n        //Adjust the width and height to take into consideration the margins\r\n        this.height -= this.margins.bottom + this.margins.top;\r\n        this.width -= this.margins.left + this.margins.right;\r\n\r\n        //Get the scales of the function \r\n        let scales: IScales = this.GetScales();\r\n\r\n        //Generate and append the axis to the graph\r\n        this.AppendAxis(svg, scales);                       \r\n            \r\n        //Append Hover Bars\r\n        this.AppendHoverBars(svg, scales);\r\n\r\n        //Append the bars to the graph\r\n        this.AppendBars(svg, scales);\r\n\r\n        //Append Text to the top of the graph\r\n        this.AppendText(svg, scales);\r\n    }\r\n\r\n    private AppendText(svg: d3.Selection<SVGGElement, unknown, HTMLElement, any>, scales: IScales) {\r\n        svg.selectAll(\"scoreText\")\r\n            .data(this.data)\r\n            .enter()\r\n            .append(\"text\")\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .attr(\"x\", (d: BarGraphData) => (scales.x(d.domain) ?? 0) + scales.x.bandwidth() / 2)\r\n            .attr(\"y\", (d: BarGraphData) => scales.y(d.value) - 5)\r\n            .text((d: BarGraphData) => d.value);\r\n    }\r\n\r\n    private AppendHoverBars(svg: d3.Selection<SVGGElement, unknown, HTMLElement, any>, scales: IScales) {\r\n        //Calculate how much space is available for the hover bars\r\n        let spaceNotOccupied = this.width - (this.data.length * scales.x.bandwidth());\r\n        let overlap = (spaceNotOccupied / this.data.length) / 2;\r\n\r\n        svg.selectAll(\"hoverBars\")\r\n            .data(this.data)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"id\", (d: BarGraphData) => this.id + d.domain + \"hover\")\r\n            .attr(\"x\", (d: BarGraphData) => (scales.x(d.domain) ?? 0) - overlap / 2)\r\n            .attr(\"width\", scales.x.bandwidth() + overlap)\r\n            .attr(\"fill\", (d: BarGraphData) => d.color)\r\n            .attr(\"y\", (d: BarGraphData) => scales.y(d.value) - overlap / 2)\r\n            .attr(\"height\", (d: BarGraphData) => (this.height) - scales.y(d.value) + overlap / 2)\r\n            .attr(\"opacity\", 0);\r\n    }\r\n\r\n    private AppendBars(svg: d3.Selection<SVGGElement, unknown, HTMLElement, any>, scales: IScales) {\r\n        //Add the bars to the graph\r\n        svg.selectAll(\".bars\")\r\n            .data(this.data)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"class\", \"bars\")\r\n            .attr(\"x\", (d: BarGraphData) => scales.x(d.domain) ?? \"\")\r\n            .attr(\"width\", scales.x.bandwidth())\r\n            .attr(\"fill\", (d: BarGraphData) => d.color)\r\n            .on(\"mouseenter\", (d: BarGraphData) => d3.select(\"#\" + this.id + d.domain + \"hover\").interrupt().attr(\"opacity\", 0.25))\r\n            .on(\"mouseout\", (d: BarGraphData) => d3.select(\"#\" + this.id + d.domain + \"hover\").transition().duration(this.animationDuration).attr(\"opacity\", 0))\r\n            //Set the initial values to 0 so that the animations will lift them\r\n            .attr(\"y\", (d: BarGraphData) => scales.y(scales.min))\r\n            .attr(\"height\", (d: BarGraphData) => this.height - scales.y(scales.min))\r\n            .on(\"mouseover\", (d: BarGraphData) => this.Tooltip.style(\"display\", \"block\"))\r\n            .on(\"mousemove\", (d: BarGraphData, i, n) => {\r\n\r\n                let svgDimension = svg.node()?.getBoundingClientRect().width ?? 0;\r\n                let svgHeight = svg.node()?.getBoundingClientRect().height ?? 0;\r\n\r\n                let tooltipWidth: number = this.Tooltip.node()?.offsetWidth ?? 0;\r\n                let tooltipHeight: number = this.Tooltip.node()?.offsetHeight ?? 0;\r\n\r\n                let positionLeft: number = (((d3.mouse(n[i])[0])) / 180) * svgDimension - (tooltipWidth / 2);\r\n                let positionRight: number = (((d3.mouse(n[i])[1])) / 250) * svgHeight - tooltipHeight - 5;\r\n\r\n                this.Tooltip.html(this.generateTooltipText(d))\r\n                            .style(\"border-color\", d.color)\r\n                            .style(\"left\", positionLeft + \"px\")\r\n                            .style(\"top\", positionRight + \"px\");\r\n            })\r\n            .on(\"mouseleave\",(d: BarGraphData) => this.Tooltip.style(\"display\", \"none\"))\r\n            .transition()\r\n            .duration(this.startAnimationTime)\r\n            .attr(\"y\", (d: BarGraphData) => scales.y(d.value))\r\n            .attr(\"height\", (d: BarGraphData) => this.height - scales.y(d.value));\r\n    }\r\n\r\n    private generateTooltipText(d: BarGraphData) {\r\n        let base: string = d.domain + \" rating of \" + d.value;\r\n\r\n        // if (d.date)\r\n        //     base += \"</br>Date: May 20th 2020\";\r\n\r\n        return base;\r\n    }\r\n\r\n    private AppendAxis(svg: d3.Selection<SVGGElement, unknown, HTMLElement, any>, scales: IScales) {\r\n        //Append the x-axis\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", \"translate(0, \" + this.height + \")\")\r\n            .call(d3.axisBottom(scales.x).ticks(0))\r\n            .selectAll(\"text\")\r\n            .attr(\"transform\", \"rotate(0)\")\r\n            .style(\"text-anchor\", \"center\");\r\n\r\n        //Append y-axis\r\n        svg.append(\"g\")\r\n            .call(d3.axisLeft(scales.y).ticks(0));\r\n    }\r\n\r\n    private GetScales(): IScales {\r\n        let values: number[] = this.data.map((d:BarGraphData) => d.value);\r\n        let min: number = (d3.min(values) ?? 0) * 0.95;\r\n\r\n        //Mutiply the extremes by constants so the min chart is shown and the large one is not at the top of the chart\r\n        let yScale: d3.ScaleLinear<number, number> = d3.scaleLinear()\r\n                        .range([this.height, 0])\r\n                        .domain([min, (d3.max(values) ?? 1) * 1.01]); \r\n\r\n        let xScale: d3.ScaleBand<string> = d3.scaleBand()\r\n        .range([0, this.width])                \r\n        .domain(this.data.map((d: BarGraphData) => d.domain))\r\n        .padding(0.2);\r\n\r\n        return {\r\n            x: xScale,\r\n            y: yScale,\r\n            min: min\r\n        }\r\n    }   \r\n}\r\n\r\ninterface IMargin {\r\n    top: number,\r\n    right: number,\r\n    bottom: number, \r\n    left: number\r\n}\r\n\r\ninterface IScales {\r\n    x: d3.ScaleBand<string>,\r\n    y: d3.ScaleLinear<number, number>,\r\n    min: number\r\n}","import React from 'react';\r\nimport { Component } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { BarChart } from './BarChart';\r\n\r\nexport class BarChartComponent extends Component<IProps> {\r\n    private static number: number = 0;\r\n    private id: string;\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.id = \"barGraph\" + BarChartComponent.number++;\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {data} = this.props;\r\n\r\n        let chart = new BarChart(data, this.id);\r\n        chart.render();\r\n    }\r\n\r\n    render() {\r\n        return <BarChartDiv id={this.id}></BarChartDiv>\r\n    }\r\n}\r\n\r\ninterface IProps {\r\n    data: BarGraphData[]\r\n}\r\n\r\nconst BarChartDiv = styled.div`\r\n    height: 50%;\r\n    width: 100%;\r\n    position: relative;\r\n`","import React from 'react';\r\nimport { Component } from \"react\";\r\nimport { StatsDiv } from './StatsForGameMode.styles';\r\nimport { DonutGraphComponent } from '../../../../Support/Graphs/DonutGraph/DonutGraphComponent';\r\nimport { BarChartComponent } from '../../../../Support/Graphs/BarChart/BarChartComponent';\r\n\r\nexport class StatsForGameMode extends Component<IProps> {\r\n    render() {\r\n        let { donutGraphData, barGraphData, title } = this.props;\r\n    \r\n        return (\r\n            <StatsDiv>\r\n                <h1>{title}</h1>\r\n                <DonutGraphComponent data={donutGraphData}/>\r\n                <BarChartComponent data={barGraphData}/>\r\n            </StatsDiv>\r\n        );\r\n    }\r\n}\r\n\r\n//Define styles\r\ninterface IProps {\r\n    barGraphData: BarGraphData[],\r\n    donutGraphData: DonutGraphData[],\r\n    title: string\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport class ChessProfile extends Component<IProps> {\r\n    render() {\r\n        let {avatar, profileLink, username, lastOnline, status, followers, joined, location, name, className } = this.props;\r\n        avatar = avatar ?? \"https://www.chess.com/bundles/web/images/user-image.007dad08.svg\";\r\n\r\n        return (\r\n            //@ts-ignore\r\n            <ProfileInformation className={className} onClick={() => {window.location = profileLink;}}>\r\n                <UserIdentifier>\r\n                    <StyledImage src={avatar} alt=\"Player Icon\"/>\r\n                    <div>{username}</div>\r\n                </UserIdentifier>\r\n                <DataContainer>\r\n                    <Data>\r\n                        <Header>Name</Header>\r\n                        <div>{name}</div>\r\n                    </Data> \r\n                    {\r\n                        location ?\r\n                        <Data>\r\n                            <Header>Location</Header>\r\n                            <div>{location}</div>\r\n                        </Data> \r\n                        : \"\"\r\n                    }\r\n                    <Data>\r\n                        <Header>Last Online</Header>\r\n                        <div>{lastOnline}</div>\r\n                    </Data>\r\n                    <Data>\r\n                        <Header>Joined</Header>\r\n                        <div>{joined}</div>\r\n                    </Data>                    \r\n                    <Data>\r\n                        <Header>Status</Header>\r\n                        <div>{status}</div>\r\n                    </Data>\r\n                    <Data>\r\n                        <Header>Followers</Header>\r\n                        <div>{followers}</div>\r\n                    </Data>\r\n                </DataContainer>\r\n                \r\n            </ProfileInformation>\r\n        );\r\n    }\r\n}\r\n\r\nconst ProfileInformation = styled.div`\r\n    width: 150px;\r\n    background: #f1f1f1;\r\n    padding: 5px 5px;\r\n    border: 1px gray solid;\r\n    border-radius: 10px;\r\n    height: fit-content;\r\n    cursor: pointer;\r\n`\r\n\r\nconst StyledImage = styled.img`\r\n    border-radius: 6px;\r\n    height: 50px;\r\n    width: 50px;\r\n    margin-right: 5px;\r\n`\r\n\r\nconst DataContainer = styled.div`\r\n    margin: 0px 10px;\r\n`\r\n\r\nconst Data = styled.div`\r\n    margin-top: 10px;\r\n    text-align: center;\r\n`\r\n\r\nconst Header = styled.div`\r\n    border-bottom: 1px lightgray solid;\r\n    color: #777574;\r\n`\r\n\r\nconst UserIdentifier = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n`\r\n\r\ninterface IProps {\r\n    avatar: string | undefined,\r\n    profileLink: string,\r\n    username: string,\r\n    lastOnline: string,\r\n    status: string,\r\n    followers: number,\r\n    joined: string,\r\n    location: string,\r\n    className: string,\r\n    name: string\r\n}","import React, { Component } from \"react\";\r\nimport { IGame } from \"../../../types/chess-com\";\r\nimport styled from \"styled-components\";\r\nimport { getChessData } from \"../../../Utilities/ChessAPIFetcher\";\r\nimport { RetrieveGames } from \"../../../Utilities/RetrieveGames\";\r\nimport background from \"../../Assets/background.jpeg\";\r\nimport { ChessBoard } from \"./Support/ChessBoard/ChessBoard\";\r\nimport { StatsForGameMode } from \"./Support/Stats/StatsForGameMode\";\r\nimport { ChessProfile } from \"./Support/Profile/ChessProfiles\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport class ChessPage extends Component<IProps, IState> {\r\n    private games?: RetrieveGames;\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        \r\n        this.games = undefined;\r\n\r\n        this.state = {\r\n            isLoadingData: true,\r\n            userInfo: userInfo,\r\n            game: emptyGame,\r\n            stats: [],\r\n        }\r\n    \r\n        this.changeGame = this.changeGame.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let {username} = this.props;\r\n\r\n        getChessData(username).then((res: ChessInformation) => {\r\n            this.games = res.games;\r\n            this.games?.getFirstGame().then((game: IGame) => {\r\n                this.setState({isLoadingData: false, userInfo: res.userInfo, stats: res.stats, game: game});\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    changeGame() {\r\n        this.setState({game: this.games?.retrieveNextGame() as IGame}); \r\n    }\r\n\r\n    render() {\r\n        let {isLoadingData, userInfo, stats, game} = this.state;\r\n        let {username} = this.props;\r\n \r\n        if (isLoadingData) {\r\n            return (\r\n                <CenterContainer>\r\n                    <Loader type={\"ThreeDots\"} color={\"#ccc\"} height={80} width={80} />\r\n                </CenterContainer>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <Page>\r\n                <BackgroundImage/>\r\n                <BoardAndProfile>\r\n                    <Profile className=\"\" {...userInfo}/>\r\n                    <ChessBoard game={game} resetGame={this.changeGame} currentUser={username}/>\r\n                </BoardAndProfile>\r\n                <Stats>\r\n                    {stats.map((stat: GameModeStats) => <StatsForGameMode title={stat.header} barGraphData={stat.rating} donutGraphData={stat.record}/>)}\r\n                </Stats> \r\n            </Page>\r\n        );\r\n    }\r\n}\r\n\r\n//Define props and state\r\ninterface IProps {\r\n    username: string,\r\n}\r\n\r\ninterface IState {\r\n    isLoadingData: boolean, \r\n    userInfo: ChessUserInformation,\r\n    stats: GameModeStats[],\r\n    game: IGame\r\n}\r\n\r\n\r\n//Define the styles of the component\r\n\r\nconst CenterContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin-top: 30vh;\r\n    position: relative;\r\n    width: 100%;\r\n`\r\n\r\nconst Page = styled.div`\r\n    margin: 0px;\r\n    padding: 0px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst BackgroundImage = styled.div`\r\n    background-image: url(${background});\r\n    background-repeat: no-repeat;\r\n    background-size: 100% 100%;\r\n    height: 100vh;\r\n    position: fixed;\r\n    z-index: -10;\r\n    width: 100vw;\r\n`\r\n\r\nconst BoardAndProfile = styled.div`\r\n    align-items: center;\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin: 5px 0px;\r\n\r\n    @media (max-width: 768px) {\r\n        margin-top: 30px;\r\n    }\r\n`\r\n\r\nconst Profile = styled(ChessProfile)`\r\n    height: 335px;\r\n`\r\n\r\nconst Stats = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n\r\n    justify-self: center;\r\n    align-self: center;\r\n\r\n    background-color: lightgray;\r\n    max-width: 685px;\r\n    width: 90%;\r\n    padding: 30px 30px;\r\n\r\n    border-radius: 15px;\r\n    border: 2px solid black;\r\n\r\n    @media (max-width: 900px) {\r\n        padding: 30px 10px;\r\n    }\r\n    \r\n    @media (max-width: 768px) {\r\n        padding: 30px 10px;\r\n    }\r\n`\r\n//Temp data for now\r\nconst emptyGame: IGame = {\r\n    \"url\":\"https://www.chess.com/live/game/4795799891\",\r\n    \"pgn\":\"[Event \\\"Live Chess\\\"]\\n[Site \\\"Chess.com\\\"]\\n[Date \\\"2020.05.01\\\"]\\n[Round \\\"-\\\"]\\n[White \\\"aleeminn\\\"]\\n[Black \\\"PesceTheFish\\\"]\\n[Result \\\"0-1\\\"]\\n[ECO \\\"C44\\\"]\\n[ECOUrl \\\"https://www.chess.com/openings/Kings-Pawn-Opening-Tayler-Opening\\\"]\\n[CurrentPosition \\\"2r3kr/p4p1p/1b4pB/3p4/1R6/N1P2Q2/PP3PPP/4q1K1 w - -\\\"]\\n[Timezone \\\"UTC\\\"]\\n[UTCDate \\\"2020.05.01\\\"]\\n[UTCTime \\\"10:54:30\\\"]\\n[WhiteElo \\\"1024\\\"]\\n[BlackElo \\\"1106\\\"]\\n[TimeControl \\\"180+2\\\"]\\n[Termination \\\"PesceTheFish won by checkmate\\\"]\\n[StartTime \\\"10:54:30\\\"]\\n[EndDate \\\"2020.05.01\\\"]\\n[EndTime \\\"11:02:02\\\"]\\n[Link \\\"https://www.chess.com/live/game/4795799891\\\"]\\n\\n1. e4 {[%clk 0:03:01.5]} 1... e5 {[%clk 0:03:00.7]} 2. Nf3 {[%clk 0:03:01.4]} 2... Nc6 {[%clk 0:03:00.7]} 3. Be2 {[%clk 0:03:01.6]} 3... Bb4 {[%clk 0:03:00.7]} 4. c3 {[%clk 0:02:59.4]} 4... Ba5 {[%clk 0:03:00.9]} 5. O-O {[%clk 0:03:00.7]} 5... Nf6 {[%clk 0:03:01]} 6. d3 {[%clk 0:03:00]} 6... Nh5 {[%clk 0:03:00.6]} 7. Nxe5 {[%clk 0:02:57.3]} 7... Nxe5 {[%clk 0:02:55.7]} 8. Bxh5 {[%clk 0:02:56.3]} 8... g6 {[%clk 0:02:56.6]} 9. Be2 {[%clk 0:02:54.1]} 9... d6 {[%clk 0:02:51.4]} 10. d4 {[%clk 0:02:54.5]} 10... Nd7 {[%clk 0:02:46.8]} 11. e5 {[%clk 0:02:53.4]} 11... dxe5 {[%clk 0:02:45.4]} 12. dxe5 {[%clk 0:02:54.4]} 12... Nxe5 {[%clk 0:02:41.2]} 13. Qa4+ {[%clk 0:02:50.5]} 13... Nc6 {[%clk 0:02:38.3]} 14. Bb5 {[%clk 0:02:47.7]} 14... Bb6 {[%clk 0:02:20.1]} 15. Re1+ {[%clk 0:02:45.6]} 15... Kf8 {[%clk 0:01:54.3]} 16. Bh6+ {[%clk 0:02:43.7]} 16... Kg8 {[%clk 0:01:47.7]} 17. Bxc6 {[%clk 0:02:40.7]} 17... bxc6 {[%clk 0:01:40.7]} 18. Qxc6 {[%clk 0:02:40.3]} 18... Bd7 {[%clk 0:01:39.4]} 19. Qf3 {[%clk 0:02:17.8]} 19... c6 {[%clk 0:01:03.4]} 20. Na3 {[%clk 0:02:11.5]} 20... Qh4 {[%clk 0:01:03.5]} 21. Bf4 {[%clk 0:01:43.8]} 21... Rc8 {[%clk 0:00:35.9]} 22. Rad1 {[%clk 0:01:38.4]} 22... Be6 {[%clk 0:00:34.9]} 23. Re4 {[%clk 0:01:03.2]} 23... Bd5 {[%clk 0:00:35.3]} 24. Rxd5 {[%clk 0:00:33.3]} 24... cxd5 {[%clk 0:00:33.9]} 25. Rb4 {[%clk 0:00:17.7]} 25... Qe7 {[%clk 0:00:20.4]} 26. Bh6 {[%clk 0:00:05.1]} 26... Qe1# {[%clk 0:00:20.8]} 0-1\",\r\n    \"time_control\":\"180+2\",\r\n    \"end_time\":1588330922,\r\n    \"rated\":true,\r\n    \"fen\":\"2r3kr/p4p1p/1b4pB/3p4/1R6/N1P2Q2/PP3PPP/4q1K1 w - -\",\r\n    \"time_class\":\"blitz\",\r\n    rules:\"chess\",\r\n    white:{\r\n       \"rating\":1024,\r\n       \"result\":\"checkmated\",\r\n       \"@id\":\"https://api.chess.com/pub/player/aleeminn\",\r\n       \"username\":\"aleeminn\"\r\n    },\r\n    black:{\r\n       \"rating\":1106,\r\n       \"result\":\"win\",\r\n       \"@id\":\"https://api.chess.com/pub/player/pescethefish\",\r\n       \"username\":\"PesceTheFish\"\r\n    }\r\n  }\r\n\r\n  const userInfo: ChessUserInformation = {\r\n    avatar: undefined,\r\n    profileLink: \"https://www.chess.com/member/pescethefish\",\r\n    username: \"PesceTheFish\",\r\n    lastOnline: \"May 15th 2020\",\r\n    status: \"Premium\",\r\n    followers: 7,\r\n    joined: \"May 15th 2018\",\r\n    location: \"Montreal\",\r\n    name: \"Jonathan Pesce\"\r\n}","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport function WorldTooltip() {\r\n    return (\r\n        <TooltipContainer id=\"WorldMapTooltip\">\r\n            <ImageContainer>\r\n                <Image id=\"WorldMapToolTipImage\" src=\"https://raw.githubusercontent.com/PesceJonathan/PersonalWebsite/ChessPage/Countries/Denmark/Copenhagen.jpg\"/>    \r\n            </ImageContainer>\r\n            <Information>\r\n                <Name id=\"WorldMapToolTipName\">Copenhague</Name>\r\n                <Description id=\"WorldMapToolTipDescription\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</Description>\r\n            </Information>\r\n        </TooltipContainer>\r\n    )\r\n}\r\n\r\nconst TooltipContainer = styled.div`\r\n    position: absolute;\r\n    border-radius: 20px;\r\n    box-shadow: 0 10px 40px 0 rgba(0, 0, 0, 1);\r\n    overflow: hidden;\r\n    background-color: white;\r\n    display: none;\r\n`\r\n\r\nconst Information = styled.div`\r\n    min-height: 200px;\r\n    width: 246px;\r\n    padding: 10px;\r\n`\r\n\r\nconst Name = styled.div`\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n`\r\n\r\nconst Description = styled.div`\r\n    padding-top: 5px;\r\n`\r\n\r\nconst ImageContainer = styled.div`\r\n    background-color: black;\r\n    display: flex;\r\n    justify-content: center;\r\n`\r\n\r\nconst Image = styled.img`\r\n    height: 200px;\r\n    max-width: 266px;\r\n    width: auto;\r\n`\r\n","import * as d3 from 'd3';\r\nimport {feature} from 'topojson-client';\r\nimport places from \"../Data/places.json\";\r\n\r\nexport class World {\r\n\r\n    private svg: any;\r\n    private tooltip: any;\r\n    private tooltipImage: any;\r\n    private tooltipCityName: any;\r\n    private tooltipDescription: any;\r\n    private projection: d3.GeoProjection;\r\n    private pathGenerator: any;\r\n    private circles: any;\r\n\r\n    constructor() {\r\n        // this.projection = d3.geoOrthographic();\r\n        this.projection = d3.geoNaturalEarth1();\r\n        this.pathGenerator = d3.geoPath().projection(this.projection);\r\n\r\n        let zoom: any = d3.zoom()\r\n        .scaleExtent([0.9, 25])\r\n        .on(\"zoom\", () => {\r\n            this.svg.attr(\"transform\", d3.event.transform);\r\n            let k = d3.event.transform.k;\r\n            let dim = Math.floor(10 / Math.sqrt(k)) - 1;  \r\n            this.svg.selectAll(\".pin\").attr(\"height\", dim + \"px\").attr(\"width\", dim + \"px\").attr(\"transform\", \"translate(0, -\" + dim + \")\");\r\n        });\r\n\r\n        this.svg = d3.select(\"#WorldMap\")\r\n                    .append(\"svg\")\r\n                    .attr(\"viewBox\", \"0 0 960 500\")\r\n                    .attr(\"max-width\", \"100%\")\r\n                    .attr(\"width\", \"100%\")\r\n                    .attr(\"height\", \"100%\")\r\n                    .append(\"g\")\r\n                    .call(zoom)\r\n                    .append(\"g\");\r\n\r\n        d3.json(\"https://gist.githubusercontent.com/mbostock/4090846/raw/d534aba169207548a8a3d670c9c2cc719ff05c47/world-50m.json\")\r\n            .then(((data: any) => {\r\n                this.render(feature(data, data.objects.countries));\r\n            }));\r\n\r\n        places.cities.map(t => new Image().src = t.img);\r\n\r\n        this.tooltip = d3.select(\"#WorldMapTooltip\");\r\n        this.tooltipImage = d3.select(\"#WorldMapToolTipImage\");\r\n        this.tooltipCityName = d3.select(\"#WorldMapToolTipName\");\r\n        this.tooltipDescription = d3.select(\"#WorldMapToolTipDescription\");\r\n    }\r\n    render(data: any) {\r\n        this.svg.append('path')\r\n            .attr('d', this.pathGenerator({type: \"Sphere\"}))\r\n            .attr(\"fill\", \"rgb(32 33 35)\");\r\n\r\n        this.svg.selectAll('path')\r\n            .data(data.features)\r\n            .enter().append('path')\r\n            .attr('d', this.pathGenerator);\r\n\r\n        this.circles = this.svg.selectAll(\"pin\").data(places.cities);\r\n\r\n        this.circles.enter()\r\n                        .append(\"image\")\r\n                        // .attr(\"xlink:href\", \"https://image.flaticon.com/icons/svg/684/684908.svg\")\r\n                        .attr(\"xlink:href\", (d:any) => d.pin)\r\n                        .classed(\"pin\", true)\r\n                        .attr(\"height\", 9)\r\n                        .attr(\"width\", 9)\r\n                        .attr(\"transform\", \"translate(-5, -10)\")\r\n                        .attr(\"x\", (d: any) => (this.projection([d.long, d.lat]) as number[])[0])\r\n                        .attr(\"y\", (d: any) => (this.projection([d.long, d.lat]) as number[])[1])\r\n                        .on(\"mouseover\", (d: any) => {\r\n                            this.tooltip.style(\"display\", \"block\");\r\n                            this.tooltipImage.attr(\"src\", d.img);\r\n                            this.tooltipCityName.html(d.name);\r\n                            this.tooltipDescription.html(d.description);\r\n                        })\r\n                        .on(\"mouseleave\",(d: any) => this.tooltip.style(\"display\", \"none\"))\r\n                        .on(\"mousemove\", (d: any, i: any, n: any) => {            \r\n                            this.tooltip.style(\"left\", d3.event.clientX + \"px\")\r\n                                        .style(\"top\", d3.event.clientY + \"px\");\r\n                        });\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { WorldTooltip } from \"./Support/Tooltip/WorldTooltip\";\r\nimport { World } from \"./Support/D3World/World\";\r\n\r\n\r\n\r\nexport class WorldMap extends Component<any, IState> {\r\n    \r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showModal: true\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        new World();\r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <WorldMapStyles id=\"WorldMap\">\r\n                <WorldTooltip/>\r\n                {\r\n                    this.state.showModal ? \r\n                    (\r\n                        <Modal>\r\n                        Not too mobile friendly at the moment due to D3.js interactions, please come visit the site on Desktop!!!\r\n                        </Modal>\r\n                    )\r\n                    :\r\n                    \"\"\r\n                }\r\n            </WorldMapStyles>\r\n        )\r\n    }\r\n}\r\n\r\ninterface IState {\r\n    showModal: boolean\r\n}\r\n\r\nconst Modal = styled.div`\r\n    position: absolute;\r\n    top: calc(50% - 30px);\r\n    background-color: lightgray;\r\n    padding: 5px;\r\n    width: 300px;\r\n\r\n    @media (min-width: 900px) {\r\n        display: none;\r\n    }\r\n`\r\n\r\nconst WorldMapStyles = styled.div`\r\n    align-items: center;\r\n    display: flex;\r\n    height: 100%;\r\n    justify-content: center;\r\n    position: relative;\r\n    overflow: hidden !important;\r\n    \r\n    > * {\r\n        fill: #878787;\r\n        stroke: #595959;\r\n        stroke-opacity: 1;\r\n        stroke-width: 0.15px;\r\n    }\r\n`\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport function Project({icon, name, description, link}: IProps) {    \r\n    return (\r\n        //@ts-ignore\r\n        <ProjectCard onClick={() => {window.location = link;}}>\r\n            <FrontFace>\r\n                <Content>\r\n                    <ProjectIcon src={icon}/>\r\n                    <ProjectName>{name}</ProjectName>\r\n                </Content>\r\n            </FrontFace>\r\n            <BackFace>\r\n                <Content>{description}</Content>\r\n            </BackFace>\r\n        </ProjectCard>\r\n    );\r\n}\r\n\r\ninterface IProps { \r\n    icon: any,\r\n    name: string,\r\n    description: string,\r\n    link: string\r\n}\r\n\r\nconst Face = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    transition: 0.5s;\r\n`\r\n\r\nconst FrontFace = styled(Face)`\r\n    align-items: center;\r\n    background: #1D3557;\r\n    display: flex;\r\n    justify-content: center;\r\n    z-index: 1;\r\n    transform-origin: bottom;\r\n`\r\n\r\nconst BackFace = styled(Face)`\r\n    background: #457b9d;\r\n    color: #F1FAEE;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transform-origin: top;\r\n    transform: translateY(100%) rotateX(90deg);\r\n    font-size: 24px;\r\n`\r\n\r\nconst ProjectCard = styled.div`\r\n    /* font-family: consolas;  */\r\n    cursor: pointer;\r\n    position: relative;\r\n    height: 200px;\r\n    margin: 0px 10px;\r\n    width: 300px;\r\n\r\n    &:hover ${FrontFace} {\r\n        transform: translateY(-100%) rotateX(90deg);\r\n        background: #E63946;\r\n    }\r\n\r\n    &:hover ${BackFace} {\r\n        transform: translateY(0) rotateX(0deg);\r\n    }\r\n`\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px;\r\n    text-align: center;\r\n`\r\n\r\nconst ProjectIcon = styled.img`\r\n    color: white;\r\n    width: 100px;\r\n`\r\n\r\nconst ProjectName = styled.div`\r\n    margin: 10px 0 0;\r\n    color: #F1FAEE;\r\n    text-align: center;\r\n    font-size: 24px;\r\n`","import React from \"react\";\r\nimport { Project } from \"./Support/Project\";\r\nimport ChessPawn from \"../Assets/ChessPawn.svg\";\r\nimport WorldMap from \"../Assets/WorldMap.svg\";\r\nimport Snake from \"../Assets/Snake.svg\";\r\nimport styled from \"styled-components\";\r\nimport Chart from \"../Assets/Chart.svg\";\r\nimport Fill from \"../Assets/Fill.svg\";\r\n\r\nexport function Projects() {\r\n    return (\r\n        <PageSize>\r\n            <ProjectsContainer>\r\n                <Header>Projects</Header>\r\n                <Project icon={ChessPawn} name={\"Chess Dashboard\"} description={\"One page dashboard showing off my Chess.com stats with the last few games I have played!\"} link={\"http://jonathanpesce.com/#/chess\"}/>\r\n                <Project icon={WorldMap} name={\"Traveled Locations\"} description={\"An interactive world map that shows the many different cities I have been traveled to! All done using D3.js and javascript!\"} link={\"http://jonathanpesce.com/#/worldMap\"}/>\r\n                <Project icon={Chart} name={\"Horse Racer\"} description={\"Power BI custom visualization that is a horse racing graph with many customizable settings!\"} link={\"https://github.com/PesceJonathan/PowerBI-HorseRace\"}/>\r\n                <Project icon={Snake} name={\"Snake Game\"} description={\"Snake game with multiple levels that was done for a TP assignment for my JS class at IUT de Lyon.\"} link={\"http://tp3javascript.herokuapp.com/Snake/\"}/>\r\n                <Project icon={Fill} name={\"Icon Fill\"} description={\"Power BI custom visualization that takes an Icon and will represent a percentage by filling the icon!\"} link={\"https://github.com/PesceJonathan/IconFill\"}/>\r\n                <EmptyProject/>\r\n                <EmptyProject/>\r\n            </ProjectsContainer>\r\n        </PageSize>\r\n    )\r\n}\r\n\r\nconst PageSize = styled.div`\r\n    background-color: #f1faee;\r\n    display: flex;\r\n    justify-content: center;\r\n    padding-top: 60px;\r\n    width: 100%;\r\n`\r\n\r\nconst Header = styled.div`\r\n    color: #1D3557;\r\n    font-size: 50px;\r\n    width: 100%;\r\n`\r\n\r\nconst ProjectsContainer = styled.div`\r\n    align-items: center;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n    margin: 0px 30px;\r\n    max-width: 1200px;\r\n\r\n    > * {\r\n        margin-bottom: 60px;\r\n    }\r\n\r\n    @media (max-width: 700px) {\r\n        justify-content: center;\r\n    }\r\n`\r\nconst EmptyProject = styled.div`\r\n    width: 300px;\r\n    height: 0px;\r\n    margin: 0px 10px;\r\n`\r\n\r\n//http://tp3javascript.herokuapp.com/Snake/\r\n//http://tp3javascript.herokuapp.com/TP4/TP4.html","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {MapPin, Link} from \"react-feather\"; \r\n\r\nexport function Experience({companyName, positionDate, title, description, location, link, linkTitle, animation}: IProps) {\r\n    return (\r\n        <ExperienceContainer>\r\n            <CompanyInformation>\r\n                <CompanyName>{companyName}</CompanyName>\r\n                <PositionDuration>{positionDate}</PositionDuration>\r\n                {animation}\r\n            </CompanyInformation>\r\n            <PositionInformation>\r\n                <PositionTitle>{title}</PositionTitle>\r\n                <PositionDescription>\r\n                    {description} \r\n                </PositionDescription>\r\n                <PositionDetails>\r\n                    <Detail><MapPin size={20}/>{location}</Detail>\r\n                    <Detail><Link size={20}/><WorkLink onClick={() => { window.location = (link as any); }}>{linkTitle}</WorkLink></Detail>\r\n                </PositionDetails>\r\n            </PositionInformation>\r\n        </ExperienceContainer>\r\n    )\r\n}\r\n\r\ninterface IProps {\r\n    companyName: string, \r\n    positionDate: string,\r\n    title: string, \r\n    description: string, \r\n    location: string, \r\n    link: string, \r\n    animation: JSX.Element,\r\n    linkTitle: string\r\n}\r\n\r\nconst WorkLink = styled.span`\r\n    &:hover {\r\n        color: #e63946;\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nconst ExperienceContainer = styled.div`\r\n    color: #f1faee;\r\n    display: flex;\r\n    font-size: 16px;\r\n    margin: 50px 0px;\r\n\r\n    @media (max-width: 1024px) {\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst Detail = styled.div`\r\n    align-items: center;\r\n    color: #a8dadc;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    margin-right: 10px;\r\n    margin-bottom: 5px;\r\n    overflow: wrap;\r\n    white-space: normal;\r\n    \r\n    > * {\r\n        margin-right: 5px;\r\n    }\r\n`\r\n\r\nconst PositionDetails = styled.div`\r\n    display: flex;\r\n    width: fit-content;\r\n    @media (max-width: 400px) {\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst PositionDescription = styled.div`\r\n    margin-bottom: 20px;\r\n`\r\n\r\nconst PositionTitle = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    height: 30px;\r\n    @media (max-width: 1024px) {\r\n        height: fit-content;\r\n        margin-bottom: 5px;\r\n    }\r\n`\r\n\r\nconst PositionInformation = styled.div`\r\n\r\n`\r\n\r\nconst PositionDuration = styled.div`\r\n    \r\n`\r\n\r\nconst CompanyName = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    height: 30px;\r\n`\r\n\r\nconst CompanyInformation = styled.div`\r\n    width: 100%;\r\n    @media (min-width: 1024px) {\r\n        width: 400px;\r\n        margin-right: 100px;\r\n    }\r\n`","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport airplane from \"../Assets/Plane.png\";\r\nimport cloud from \"../Assets/cloud.svg\";\r\n\r\nexport function Plane() {    \r\n    return (\r\n        <Container>\r\n            <PlaneContainer>\r\n                <PlaneImage src={airplane}/>\r\n            </PlaneContainer>\r\n            <Clouds>\r\n                <CloudImage src={cloud}/>\r\n                <CloudImage src={cloud}/>\r\n                <CloudImage src={cloud}/>\r\n            </Clouds>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    position: relative;\r\n    width: 200px;\r\n    height: 150px;\r\n    overflow: hidden;\r\n`\r\n\r\nconst PlaneContainer = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0; \r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    animation: animate-plane 1.6s linear infinite;\r\n\r\n    @keyframes animate-plane {\r\n        0% {\r\n            transform: translate(4px, 4px);\r\n        }\r\n\r\n        50% {\r\n            transform: translate(-4px, -4px);\r\n        }\r\n\r\n        100% {\r\n            transform: translate(4px, 4px);\r\n        }\r\n    }\r\n`\r\n\r\nconst PlaneImage = styled.img`\r\n    height: 150px;\r\n    width: 150px;\r\n    position: relative;\r\n    z-index: 3;\r\n`\r\n\r\nconst Clouds = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n\r\n    > img:nth-child(1) {\r\n        top: 15px;\r\n        animation-delay: -2s;\r\n        animation: animate-cloud 8s linear infinite;\r\n    }\r\n\r\n    > img:nth-child(2) {\r\n        top: -10px;\r\n        animation-delay: -4s;\r\n        animation: animate-cloud 6s linear infinite;\r\n    }\r\n\r\n    > img:nth-child(3) {\r\n        top: 40px;\r\n        animation-delay: -5s;\r\n        animation: animate-cloud 5s linear infinite;\r\n    }\r\n\r\n    @keyframes animate-cloud {\r\n        0% {\r\n            transform: translateX(400px);\r\n        }\r\n\r\n        40% {\r\n            transform: translateX(-400px);\r\n        }\r\n\r\n        100% {\r\n            transform: translateX(-400px);\r\n        }\r\n    }\r\n`\r\n\r\nconst CloudImage = styled.img`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    opacity: 0.8;\r\n    animation: animate-cloud 4s linear infinite;\r\n    z-index: 2;\r\n\r\n    @keyframes animate-cloud {\r\n        0% {\r\n            transform: translateX(400px);\r\n        }\r\n\r\n        40% {\r\n            transform: translateX(-400px);\r\n        }\r\n\r\n        100% {\r\n            transform: translateX(-400px);\r\n        }\r\n    }\r\n`","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport function Fan() {\r\n    return (\r\n        <FanBox>\r\n            <FanCircle>\r\n                <FanContainer>\r\n                    <LeftFan/>\r\n                    <RightFan/>\r\n                    <TopFan/>\r\n                    <BottomFan/>\r\n                </FanContainer>\r\n            </FanCircle>\r\n        </FanBox>\r\n    );\r\n}\r\n\r\nconst FanCircle = styled.div`\r\n    height: 65px;\r\n    width: 65px;\r\n\r\n    align-items: center;\r\n    background-color: #1d3557;\r\n    border: 2px black solid;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    justify-content: center;\r\n`\r\n\r\nconst FanBox = styled.div`\r\n    height: 100px;\r\n    width: 100px;\r\n\r\n    align-items: center;\r\n    background-color: #b2b2b2;\r\n    border: 2px black solid;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    justify-content: center;\r\n\r\n    margin: 25px 50px;\r\n    @media (max-width: 1024px) {\r\n        margin: 25px 0px;\r\n    }\r\n`\r\n\r\nconst FanContainer = styled.div`\r\n    height: 60px;\r\n    width: 60px;\r\n    border-radius: 50%;\r\n    position: relative;\r\n    display: inline-block;\r\n    animation: spin 1s linear infinite;\r\n\r\n    @keyframes spin{\r\n        0%{\r\n            transform: rotate(0deg);\r\n        }\r\n        100%{\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n\r\n    &:after{\r\n        content:\"\";\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        border-radius: 50%;\r\n        width: 14px;\r\n        height: 14px;\r\n        margin-left: -7px;\r\n        margin-top: -7px;\r\n        background: #444;\r\n        box-shadow: inset 0 0px 0px 2px #444444, inset 0 0px 1px 4px #383838;\r\n    }\r\n`\r\n\r\nconst FanElement = styled.div`\r\n    display: block;\r\n    background: #ccc;\r\n    border-radius: 5px;\r\n    position: absolute;\r\n    box-shadow: inset 1px 1px 40px #555;\r\n    &:after{\r\n        content: \"\";\r\n        position: absolute;\r\n        background: #666;\r\n        display: block;\r\n    }\r\n`\r\n\r\nconst HorizontalFan = styled(FanElement)`\r\n    width: auto;\r\n    height: 10px;\r\n    top: 50%;\r\n    margin-top: -5px;\r\n    transform: skewX(20deg);\r\n    &:after{\r\n      top: 25%;\r\n      width: 3px;\r\n      height: 50%;\r\n    }\r\n`\r\n\r\nconst VerticalFan = styled(FanElement)`\r\n    width: 10px;\r\n    height: auto;\r\n    left: 50%;\r\n    margin-left: -5px;\r\n    transform: skewY(20deg);\r\n    &:after{\r\n      height: 3px;\r\n      width: 50%;\r\n      margin-left: 25%;\r\n    }\r\n`\r\n\r\nconst LeftFan = styled(HorizontalFan)`\r\n    left: 0;\r\n    right: 50%;\r\n    margin-right: 9px;\r\n    border-radius: 50% 3px 3px 50%;\r\n    &:after{\r\n      left: 100%;\r\n    }\r\n`\r\n\r\nconst RightFan = styled(HorizontalFan)`\r\n    right: 0;\r\n    left: 50%;\r\n    margin-left: 9px;\r\n    border-radius: 3px 50% 50% 3px;\r\n    &:after{\r\n      right: 100%;\r\n    }\r\n`\r\n\r\nconst TopFan = styled(VerticalFan)`\r\n    top: 0;\r\n    bottom: 50%;\r\n    margin-bottom: 9px;\r\n    border-radius: 50% 50% 3px 3px;\r\n    &:after{\r\n      top: 100%;\r\n    }\r\n`\r\n\r\nconst BottomFan = styled(VerticalFan)`\r\n    top: 50%;\r\n    bottom: 0;\r\n    margin-top: 9px;\r\n     border-radius: 3px 3px 50% 50%;\r\n    &:after{\r\n      bottom: 100%;\r\n    }\r\n`","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport truck from \"../Assets/Truck.png\";\r\n\r\nexport function Truck() {    \r\n    return (\r\n        <Container>\r\n            <TruckImg src={truck}/>\r\n            <Road/>\r\n            <RoadLine1/>\r\n            <RoadLine2/>\r\n            <RoadLine3/>\r\n            <RoadLine4/>\r\n            <RoadLine5/>\r\n            <RoadLine6/>\r\n            <RoadLine7/>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: flex-end;\r\n\r\n    position: relative;\r\n    width: 200px;\r\n    height: 150px;\r\n    overflow: hidden;\r\n\r\n    @media (max-width: 1024px) {\r\n        height: 100px;\r\n        margin: 20px 0px;\r\n    }\r\n`\r\n\r\nconst TruckImg = styled.img`\r\n    position: relative;\r\n    height: 125px;\r\n    width: 125px;\r\n    z-index: 3;\r\n\r\n    animation: animate-plane 1.6s linear infinite;\r\n\r\n    @keyframes animate-plane {\r\n        0% {\r\n            transform: translate(1px, 1px);\r\n        }\r\n\r\n        50% {\r\n            transform: translate(-1px, -1px);\r\n        }\r\n\r\n        100% {\r\n            transform: translate(1px, 1px);\r\n        }\r\n    }\r\n`\r\n\r\nconst Road = styled.div`\r\n    position: absolute;\r\n    height: 50px;\r\n    width: 200px;\r\n\r\n    background-color: black;\r\n    border-top: 2px solid gray;\r\n    border-bottom: 2px solid gray;\r\n    z-index: 1;\r\n`\r\n\r\nconst RoadLine = styled.div`\r\n    position: absolute;\r\n    top: 115px;\r\n    z-index: 2;\r\n    width: 20px;\r\n    height: 10px;\r\n    background-color: yellow;\r\n\r\n    @media (max-width: 1024px) {\r\n        top: 70px;\r\n    }\r\n\r\n    animation: animate-road 3s linear infinite;\r\n\r\n    @keyframes animate-road {\r\n        0% {\r\n            transform: translateX(0px);\r\n        }\r\n\r\n        100% {\r\n            transform: translateX(-180px);\r\n        }\r\n    }\r\n`\r\n\r\nconst RoadLine1 = styled(RoadLine)`\r\n    left: 0px;\r\n`\r\nconst RoadLine2 = styled(RoadLine)`\r\n    left: 60px;\r\n`\r\nconst RoadLine3 = styled(RoadLine)`\r\n    left: 120px;\r\n`\r\nconst RoadLine4 = styled(RoadLine)`\r\n    left: 180px;\r\n`\r\nconst RoadLine5 = styled(RoadLine)`\r\n    left: 240px;\r\n`\r\nconst RoadLine6 = styled(RoadLine)`\r\n    left: 300px;\r\n`\r\nconst RoadLine7 = styled(RoadLine)`\r\n    left: 360px;\r\n`","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport waterBottle from \"../Assets/waterBottle.png\";\r\n\r\nexport function FilledUpAdnArt() {\r\n    return (\r\n        <Container>\r\n            <BorderBox>\r\n                <WaterBottle src={waterBottle}/>\r\n            </BorderBox>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    width: 200px;\r\n    height: 150px;\r\n`\r\n\r\nconst WaterBottle = styled.img`\r\n    position: relative;\r\n    height: 140px;\r\n    width: 140px;\r\n    z-index: 4;\r\n`\r\n\r\nconst BorderBox = styled.div`\r\n    width: 140px;\r\n    height: 140px;\r\n    color: #ddd;\r\n    position: relative;\r\n    overflow: hidden;\r\n    margin-top: 10px;\r\n\r\n    &:before {\r\n        content: \"\";\r\n        position: absolute;\r\n        width: 200px;\r\n        height: 200px;\r\n        background: #00acee;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        border-radius: 40%;\r\n        animation: fill 6s ease-in-out infinite;\r\n\r\n        @keyframes fill {\r\n           from {\r\n               top: 150px;\r\n               transform: translateX(-50%) rotate(0deg);\r\n           } \r\n\r\n           to {\r\n               top: 0px;\r\n               transform: translateX(-50%) rotate(360deg);\r\n           }\r\n        }\r\n    }\r\n`","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Experience } from \"./Support/Experience\";\r\nimport { Plane } from \"./WorkAnimations/Plane\";\r\nimport { Fan } from \"./WorkAnimations/Fan\";\r\nimport { Truck } from \"./WorkAnimations/Truck\";\r\nimport { FilledUpAdnArt } from \"./WorkAnimations/FilledUpAdnArt\";\r\n\r\nexport function Experiences() {\r\n    return (\r\n        <PageSize>\r\n            <ProjectPage>\r\n                <Header>Experiences</Header>\r\n                <ExperiencePage>\r\n                    <Experience companyName={\"Bombardier\"} positionDate={\"Jun 2020 - Current\"} title={\"Internship/Part Time - Software Developer Intern\"} \r\n                        location={\"Montreal\"} link={\"http://opo.something.com\"} linkTitle={\"tempsite.com\"} animation={<Plane/>}\r\n                        description={\"Working as an intern Software Developer Intern within a large digital team mainly contributing pages and bug fixs to the new e-commerce site and eventually individually creating a admin dashboard for the site. The sites were React based using Next.js working in a sprint.\"}/>\r\n                    \r\n                    <Experience companyName={\"Neptronic\"} positionDate={\"Sep 2019 - May 2020\"} title={\"Part Time - Software Developer\"} \r\n                        location={\"Montreal\"} link={\"https://www.istackub.com/\"} linkTitle={\"istackub.com\"} animation={<Fan/>}\r\n                        description={\"Tasked with working with the development team to begin migrating the companies front end of their internal software from a C# MVC project to a fully responsive React.js project. Then transitioned into leading a team of 3 other part time developers in creating a React and Node.js based dashboard used to manage a data center.\"}/>\r\n\r\n                    <Experience companyName={\"XPO Logistics\"} positionDate={\"Apr 2019 - Jun 2019\"} title={\"Internship - Software Developer\"} \r\n                        location={\"Lyon\"} link={\"https://www.xpo.com\"} linkTitle={\"xpo.com\"} animation={<Truck/>}\r\n                        description={\"Autonomous development of custom visuals for the reporting tool Power BI, which are to be used by the Business Intelligence team at XPO Logistics Europe. These visuals were developed using TypeScript and the data visualization library, D3.js.\"}/>\r\n\r\n                    <Experience companyName={\"AdnArt Inc\"} positionDate={\"Nov 2018 - Jan 2019\"} title={\"Contract - Software Developer\"} \r\n                        location={\"Montreal\"} link={\"https://www.adnart.com/ca/\"} linkTitle={\"adnart.com\"} animation={<FilledUpAdnArt/>}\r\n                        description={\"Collaborating with other developers in order to develop a C# based SOAP API allowing other companies to access the stock levels, thier orders and their shipments statsuses of AdNArt products. Responsible as a group for planning, developing and testing the application.\"}/>\r\n                </ExperiencePage>\r\n            </ProjectPage> \r\n        </PageSize>\r\n    )\r\n}\r\n\r\nconst PageSize = styled.div`\r\n    background-color: #1D3557;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    padding-top: 60px;\r\n`\r\n\r\nconst ProjectPage = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 1200px;\r\n    margin: 0px 30px;\r\n`\r\n\r\nconst Header = styled.div`\r\n    color: #f1faee;\r\n    font-size: 50px;\r\n    width: 100%;\r\n`\r\n\r\nconst ExperiencePage = styled.div`\r\n    width: 100%;\r\n    max-width: 840px;\r\n`","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { MapPin, Link } from \"react-feather\";\r\n\r\nexport function School({companyName, positionDate, title, description, location, link, linkTitle, animation}: IProps) {\r\n    return (\r\n        <ExperienceContainer>\r\n            <CompanyInformation>\r\n                <CompanyName>{companyName}</CompanyName>\r\n                <PositionDuration>{positionDate}</PositionDuration>\r\n                {animation}\r\n            </CompanyInformation>\r\n            <PositionInformation>\r\n                <PositionTitle>{title}</PositionTitle>\r\n                <PositionDescription>\r\n                    {description} \r\n                </PositionDescription>\r\n                <PositionDetails>\r\n                    <Detail><MapPin size={20}/>{location}</Detail>\r\n                    <Detail><Link size={20}/><WorkLink onClick={() => { window.location = (link as any); }}>{linkTitle}</WorkLink></Detail>\r\n                </PositionDetails>\r\n            </PositionInformation>\r\n        </ExperienceContainer>\r\n    )\r\n}\r\n    \r\n    interface IProps {\r\n        companyName: string, \r\n        positionDate: string,\r\n        title: string, \r\n        description: string, \r\n        location: string, \r\n        link: string, \r\n        animation: JSX.Element,\r\n        linkTitle: string\r\n    }\r\n    \r\n    const WorkLink = styled.span`\r\n        &:hover {\r\n            color: #e63946;\r\n            cursor: pointer;\r\n        }\r\n    `\r\n    \r\n    const ExperienceContainer = styled.div`\r\n        color: #1D3557;\r\n        display: flex;\r\n        font-size: 16px;\r\n        margin: 50px 0px;\r\n    \r\n        @media (max-width: 1024px) {\r\n            flex-direction: column;\r\n        }\r\n    `\r\n    \r\n    const Detail = styled.div`\r\n        align-items: center;\r\n        color: #457b9d;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        margin-right: 10px;\r\n        margin-bottom: 5px;\r\n        overflow: wrap;\r\n        white-space: normal;\r\n        \r\n        > * {\r\n            margin-right: 5px;\r\n        }\r\n    `\r\n    \r\n    const PositionDetails = styled.div`\r\n        display: flex;\r\n        width: fit-content;\r\n        @media (max-width: 400px) {\r\n            flex-direction: column;\r\n        }\r\n    `\r\n    \r\n    const PositionDescription = styled.div`\r\n        margin-bottom: 20px;\r\n    `\r\n    \r\n    const PositionTitle = styled.div`\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: 16px;\r\n        font-weight: bold;\r\n        height: 30px;\r\n\r\n        @media (max-width: 1024px) {\r\n            height: fit-content;\r\n            margin-bottom: 5px;\r\n        }\r\n    `\r\n    \r\n    const PositionInformation = styled.div`\r\n    \r\n    `\r\n    \r\n    const PositionDuration = styled.div`\r\n        \r\n    `\r\n    \r\n    const CompanyName = styled.div`\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: 20px;\r\n        font-weight: bold;\r\n    `\r\n    \r\n    const CompanyInformation = styled.div`\r\n        width: 100%;\r\n        @media (min-width: 1024px) {\r\n            width: 400px;\r\n            margin-right: 100px;\r\n        }\r\n    `","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Concordia from \"../Assets/Concordia.svg\";\r\nimport Dawson from \"../Assets/Dawson.png\";\r\nimport IUT from \"../Assets/IUTDeLyon.png\";\r\nimport { School } from \"./Support/School\";\r\nimport RoyalWest from \"../Assets/RoyalWestAcademy.png\";\r\n\r\n\r\nexport function Schools() {\r\n    return (\r\n        <PageSize>\r\n            <ProjectPage>\r\n                <Header>School</Header>\r\n                <ExperiencePage>\r\n                    <School companyName={\"Concordia University\"} positionDate={\"Sep 2019 - Current\"} title={\"Mathematics and Statistics and Computer Applications\"} \r\n                        location={\"Montreal\"} link={\"https://www.concordia.ca/\"} linkTitle={\"concordia.ca\"} animation={CreateImageElement(Concordia)}\r\n                        description={\"Studying Computer Applications to continue to enhance my computer science skills and knowledge while studying Mathematics and Statistics to allow me to have the proper knowledge to go into Data Science or AI. Currently in the Co-Op version of the program adding an additional 3 internships to my course load.\"} />\r\n                    <School companyName={\"IUT de Lyon\"} positionDate={\"Feb 2019 - Jun 2019\"} title={\"Computer Science\"} \r\n                        location={\"Lyon\"} link={\"https://iut.univ-lyon1.fr/\"} linkTitle={\"iut.univ-lyon1.fr\"} animation={CreateImageElement(IUT)}\r\n                        description={\"Exchange program to complete my final semester of my DEC abroad in Lyon where I did around 2 months of studying and 3 months of working. \"} />\r\n                    <School companyName={\"Dawson College\"} positionDate={\"Aug 2016 - Jun 2019\"} linkTitle={\"dawsoncollege.qc.ca\"} title={\"Computer Science\"} \r\n                        location={\"Montreal\"} link={\"https://www.dawsoncollege.qc.ca/\"} animation={CreateImageElement(Dawson)}\r\n                        description={\"This program prepares its students to work as a software developer through the intense theoretical and practical work in Computer Science. Students gain experience creating state-of-the-art computer systems that support the needs and goals of modern businesses.\"} />\r\n                    <School companyName={\"Royal West Academy\"} positionDate={\"Aug 2011 - Jun 2016\"} title={\"Mathematics and Statistics and Computer Applications\"} \r\n                        location={\"Montreal\"} link={\"http://www.royalwestacademy.com/\"} linkTitle={\"royalwestacademy.com\"} animation={CreateImageElement(RoyalWest)}\r\n                        description={\"During my time at Royal West Academy, I participated on the badminton and hockey team. I took part in the high math program and graduated with honors.\"} />\r\n                </ExperiencePage>\r\n            </ProjectPage> \r\n        </PageSize>\r\n    )\r\n}\r\n\r\nconst CreateImageElement = (src: any) => {\r\n    return (\r\n        <SchoolDisplay>\r\n            <SchoolImage src={src}/>\r\n        </SchoolDisplay>\r\n    );\r\n}\r\n\r\nconst SchoolImage = styled.img`\r\n    width: 200px;\r\n`\r\n\r\nconst SchoolDisplay = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0px;\r\n    height: 100px;\r\n    width: 200px;\r\n`\r\n\r\nconst ProjectPage = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 1200px;\r\n    margin: 0px 30px;\r\n`\r\n\r\nconst Header = styled.div`\r\n    color: #1D3557;\r\n    font-size: 50px;\r\n    width: 100%;\r\n`\r\n\r\nconst ExperiencePage = styled.div`\r\n    width: 100%;\r\n    max-width: 840px;\r\n`\r\n\r\nconst PageSize = styled.div`\r\n    background-color: #f1faee;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    padding-top: 60px;\r\n`","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport function SocialMedia() {\r\n    return (\r\n        <List>\r\n            <SocialMediaPaltform background={\"#3b5999\"}>\r\n                <a href=\"https://www.facebook.com/PesceTheFish/\">\r\n                    <Squares></Squares>\r\n                    <Squares></Squares>\r\n                    <Squares></Squares>\r\n                    <Squares></Squares>\r\n                    <Squares className=\"fa fa-facebook\" aria-hidden=\"true\"></Squares>\r\n                </a>\r\n            </SocialMediaPaltform>\r\n            <SocialMediaPaltform background={\"#FF0000\"}>\r\n                <a href=\"https://www.youtube.com/user/jonathanthefish/\">\r\n                    <Squares></Squares>\r\n                    <Squares></Squares>\r\n                    <Squares></Squares>\r\n                    <Squares></Squares>\r\n                    <Squares className=\"fa fa-youtube\" aria-hidden=\"true\"></Squares>\r\n                </a>\r\n            </SocialMediaPaltform>\r\n            <SocialMediaPaltform background={\"#0077B5\"}>\r\n                <a href=\"https://www.linkedin.com/in/jonathan-pesce-aa9665197/\">\r\n                    <Squares></Squares>\r\n                    <Squares></Squares>\r\n                    <Squares></Squares>\r\n                    <Squares></Squares>\r\n                    <Squares className=\"fa fa-linkedin\" aria-hidden=\"true\"></Squares>\r\n                </a>\r\n            </SocialMediaPaltform>\r\n            <SocialMediaPaltform background={\"#E4405F\"}>\r\n                <a href=\"https://www.instagram.com/pesce.jonathan/\">\r\n                    <Squares></Squares>\r\n                    <Squares></Squares>\r\n                    <Squares></Squares>\r\n                    <Squares></Squares>\r\n                    <Squares className=\"fa fa-instagram\" aria-hidden=\"true\"></Squares>\r\n                </a>\r\n            </SocialMediaPaltform>\r\n            <SocialMediaPaltform background={\"#000\"}>\r\n                <a href=\"https://github.com/PesceJonathan/\">\r\n                    <Squares></Squares>\r\n                    <Squares></Squares>\r\n                    <Squares></Squares>\r\n                    <Squares></Squares>\r\n                    <Squares className=\"fa fa-github\" aria-hidden=\"true\"></Squares>\r\n                </a>\r\n            </SocialMediaPaltform>\r\n        </List>\r\n    );\r\n}\r\n\r\nconst List = styled.ul`\r\n    position: relative;\r\n    margin: 0;\r\n    padding: 60px 0px;\r\n    height: fit-content;\r\n    display: flex;\r\n    align-items: flex-end; \r\n    justify-content: center;\r\n    background-color: #1D3557;\r\n    transform-style: preserve-3d;\r\n    flex-wrap: wrap;\r\n`\r\nconst Squares = styled.span`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0; \r\n    width: 100%;\r\n    height: 100%;\r\n    background: #457b9d;\r\n    transition: 0.5s;\r\n    display: flex !important;\r\n    align-items: center; \r\n    justify-content: center;\r\n    color: #f1faee;\r\n    font-size: 30px !important;\r\n    transition: 0.2s;\r\n`\r\n\r\ninterface SocialProps {\r\n    background: string\r\n}\r\n\r\nconst SocialMediaPaltform = styled.li<SocialProps>`\r\n    position: relative; \r\n    list-style: none;\r\n    width: 60px;\r\n    height: 60px;\r\n    margin: 0 30px;\r\n    transform:  rotate(-25deg) skew(25deg);\r\n    background-color: #457b9d;\r\n    \r\n    @media (max-width: 350px) {\r\n        margin: 0 20px;\r\n    }\r\n\r\n    &:before {\r\n        position: absolute;\r\n        content: '';\r\n        bottom: -10px;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 10px;\r\n        background: #304f62;\r\n        transform-origin: top;\r\n        transform: skewX(-41deg);\r\n    }\r\n\r\n    &:after {\r\n        position: absolute;\r\n        content: '';\r\n        top: 0px;\r\n        left: -9px;\r\n        width: 9px;\r\n        height: 100%;\r\n        background: #304f62;\r\n        transform-origin: right;\r\n        transform: skewY(-49deg);\r\n    }\r\n\r\n    > a:hover span {\r\n        z-index: 1000;\r\n        transition: 0.5s;\r\n        background-color: ${props => props.background};\r\n        color: #fff;\r\n        box-shadow: -1px 1px 1px rgba(0,0,0,0.05);\r\n    }\r\n\r\n    > a:hover span:nth-child(5)\r\n    {\r\n        transform: translate(40px, -40px);\r\n        opacity: 1;\r\n    }\r\n\r\n    > a:hover span:nth-child(4)\r\n    {\r\n        transform: translate(30px, -30px);\r\n        opacity: .8;\r\n    }\r\n\r\n    > a:hover span:nth-child(3)\r\n    {\r\n        transform: translate(20px, -20px);\r\n        opacity: .6;\r\n    }\r\n\r\n    > a:hover span:nth-child(2)\r\n    {\r\n        transform: translate(10px, -10px);\r\n        opacity: .4;\r\n    }\r\n\r\n    > a:hover span:nth-child(1)\r\n    {\r\n        transform: translate(0px, 0px);\r\n        opacity: .5;\r\n    }\r\n`\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Me from \"../Assets/Me.png\";\r\n\r\nexport function AboutMe() {\r\n    return (\r\n        <PageSize>\r\n            <AboutMeSection>\r\n                <Introduction>\r\n                    <ProfilePicture src={Me}/>\r\n                    <Welcome>Welcome to my site!!!!!</Welcome>\r\n                    <Quote>“To become good at anything you have to know how to apply basic principles. To become great at it, you have to know when to violate those principles” <br/> - Garry Kasparov </Quote>\r\n                </Introduction>\r\n                <AboutMeText>\r\n                    I am a computer science graduate from Dawson College continuing to expand my skill set at Concordia University. On top of that, I am currently working as a web developer \r\n                    at Bombardier and plan to use this website as a platform to continue developing and show casing my skills. Most of my projects that I create are inspired by my hobbies \r\n                    and interest such as chess, traveling and data visualization. I plan to work on future projects that are revolved around my other interests such as ESports, artificial \r\n                    intelligence, game theory and anything else that happens to inspire me! Lastly, as you can clearly tell I am not a designer or an artist so any feedback on anything is \r\n                    welcomed!!! \r\n                </AboutMeText>\r\n\r\n                <Hint>Try hovering over (or on mobile holding) different elements you see!!</Hint>\r\n            </AboutMeSection>\r\n        </PageSize>\r\n    );\r\n}\r\n\r\nconst Hint = styled.div`\r\n    color: #e63946;\r\n    text-align: center;\r\n    margin-bottom: 30px;\r\n`\r\n\r\nconst Introduction = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    margin-bottom: 30px;\r\n    max-width: 600px;\r\n`\r\n\r\nconst ProfilePicture = styled.img`\r\n    border-radius: 50%;\r\n    margin-bottom: 30px;\r\n    width: 200px;\r\n`\r\n\r\nconst Welcome = styled.div`\r\n    font-size: 32px;\r\n\r\n    @media (max-width: 424px) {\r\n       font-size: 26px; \r\n    }\r\n`\r\n\r\nconst Quote = styled.div`\r\n    color: #f1faee;\r\n    font-size: 14px;\r\n    text-align: center;\r\n`\r\n\r\nconst PageSize = styled.div`\r\n    background-color: #1D3557;\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    padding-top: 60px;\r\n`\r\n\r\nconst AboutMeSection = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 900px;\r\n    margin: 0px 30px;\r\n    color: #f1faee;\r\n`\r\n\r\nconst AboutMeText = styled.div`\r\n    text-align: center;\r\n    margin-bottom: 50px;\r\n\r\n    @media (max-width: 425px) {\r\n        text-align: justify;\r\n    }\r\n`","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Parallax } from 'react-parallax';\r\nimport \"./JonathanPesce.css\";\r\nimport { Projects } from \"./Support/Projects/Projects\";\r\nimport { Experiences } from \"./Support/Experience/Experiences\";\r\nimport { Schools } from \"./Support/School/Schools\";\r\nimport { SocialMedia } from \"./Support/SocialMedia/SocialMedia\";\r\nimport { AboutMe } from \"./Support/AboutMe/AboutMe\";\r\n\r\nexport function JonathanPesce() {\r\n\r\n    return (\r\n        <PersonalPage>\r\n            <Parallax blur={{min: -8, max: 15}} bgImage={\"https://raw.githubusercontent.com/PesceJonathan/PersonalWebsite/ChessPage/Assets/JonathanBackground.png\"} bgImageAlt={\"Parallax Background Image\"} strength={500}>\r\n                <CoverImage>\r\n                    <MainCoverImageInformation>\r\n                        <NameHeader>Jonathan Pesce</NameHeader>\r\n                        <NameHeader>Computer Science and</NameHeader>\r\n                        <NameHeader>Mathematics Student</NameHeader>\r\n                    </MainCoverImageInformation>\r\n                </CoverImage>\r\n            </Parallax>\r\n            <AboutMe/>\r\n            <Schools/>\r\n            <Experiences/>\r\n            <Projects/>\r\n            <SocialMedia/>\r\n        </PersonalPage>\r\n    )\r\n}\r\n\r\nconst PersonalPage = styled.div`\r\n    font-family: 'Montserrat', sans-serif;\r\n`\r\n\r\nconst CoverImage = styled.div`\r\n    align-items: flex-start;\r\n    display: flex;\r\n    height: 100vh;\r\n    justify-content: flex-end;\r\n\r\n    @media (max-width: 480px) {\r\n        justify-content: center;\r\n    }\r\n`\r\n\r\nconst NameHeader = styled.div`\r\n    @media (max-width: 480px) {\r\n        text-align: center;\r\n    }\r\n`\r\n\r\nconst MainCoverImageInformation = styled.div`\r\n    color: #f1faee ;\r\n    font-size: 80px;\r\n    margin: 5% 5% 0px 0px;\r\n\r\n    @media (max-width: 1650px) {\r\n        font-size: 70px;\r\n    }\r\n\r\n    @media (max-width: 1440px) {\r\n        font-size: 50px;\r\n    }\r\n\r\n    @media (max-width: 1024px) {\r\n        font-size: 45px;\r\n        margin: 10% 8% 0px 0px;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n        font-size: 40px;\r\n        margin: 10% 8% 0px 0px;\r\n    }\r\n\r\n    @media (max-width: 480px) {\r\n        font-size: 30px;\r\n        margin: 30% 0px;\r\n    }\r\n`","import React from \"react\";\r\nimport { Switch, Route, BrowserRouter, HashRouter } from \"react-router-dom\";\r\nimport { ChessPage } from \"../Content/Pages/Chess/ChessPage\";\r\nimport { WorldMap } from \"../Content/Pages/WorldMap/WorldMap\";\r\nimport { JonathanPesce } from \"../Content/Pages/MainPage/JonathanPesce\";\r\n\r\n\r\nexport function RouterManager() {\r\n    return (\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route exact path={\"/chess\"} render={() => <ChessPage username={\"PesceTheFish\"}/>}/>\r\n                <Route exact path={\"/worldMap\"} component={WorldMap}/>\r\n                <Route exact path={\"/\"} component={JonathanPesce}/>\r\n            </Switch>\r\n        </HashRouter>\r\n    )\r\n}","import React from 'react';\r\nimport \"./styles/globalstyles.css\";\r\nimport { RouterManager } from './Router/Router';\r\n\r\nfunction App() {\r\n  return <RouterManager/>\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/cloud.66e563de.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.047cde2a.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/ChessPawn.0ab770a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/WorldMap.ac25f028.svg\";","module.exports = __webpack_public_path__ + \"static/media/Snake.753dbebc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Chart.68d0f1e7.svg\";","module.exports = __webpack_public_path__ + \"static/media/Fill.0fdebeee.svg\";","module.exports = __webpack_public_path__ + \"static/media/Plane.fde8e8bc.png\";","module.exports = __webpack_public_path__ + \"static/media/Truck.17080759.png\";","module.exports = __webpack_public_path__ + \"static/media/waterBottle.353573fb.png\";","module.exports = __webpack_public_path__ + \"static/media/Concordia.96578da9.svg\";","module.exports = __webpack_public_path__ + \"static/media/Dawson.360cf29c.png\";","module.exports = __webpack_public_path__ + \"static/media/IUTDeLyon.1fffe6a8.png\";","module.exports = __webpack_public_path__ + \"static/media/RoyalWestAcademy.ace2a019.png\";","module.exports = __webpack_public_path__ + \"static/media/Me.0e77a9b5.png\";"],"sourceRoot":""}